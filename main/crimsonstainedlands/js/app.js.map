{
  "version": 3,
  "sources": ["../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/webpack/universalModuleDefinition", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/AccessibilityManager.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Clipboard.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/ColorContrastCache.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Lifecycle.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Linkifier.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/LocalizableStrings.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/OscLinkProvider.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/RenderDebouncer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Terminal.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/TimeBasedDebouncer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Viewport.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/ColorZoneStore.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/CompositionHelper.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/Mouse.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/MoveToCell.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/DomRenderer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/WidthCache.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/Constants.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/RendererUtils.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/SelectionRenderModel.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/selection/SelectionModel.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CharSizeService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CharacterJoinerService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CoreBrowserService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/LinkProviderService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/MouseService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/RenderService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/SelectionService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/Services.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/ThemeService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/CircularList.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Clone.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Color.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/CoreTerminal.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/EventEmitter.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/InputHandler.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Lifecycle.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/MultiKeyMap.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Platform.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/SortedList.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/TaskQueue.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/WindowsMode.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/AttributeData.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Buffer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferLine.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferRange.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferReflow.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferSet.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/CellData.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Constants.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Marker.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/data/Charsets.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/data/EscapeSequences.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/Keyboard.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/TextDecoder.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/UnicodeV6.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/WriteBuffer.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/XParseColor.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/Constants.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/DcsParser.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/EscapeSequenceParser.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/OscParser.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/Params.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/AddonManager.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferApiView.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferLineApiView.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferNamespaceApi.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/ParserApi.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/UnicodeApi.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/BufferService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CharsetService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CoreMouseService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CoreService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/DecorationService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/InstantiationService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/LogService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/OptionsService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/OscLinkService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/ServiceRegistry.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/Services.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/UnicodeService.ts", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/webpack/bootstrap", "../../node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/public/Terminal.ts", "../../node_modules/@xterm/addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition", "../../node_modules/@xterm/addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts", "../../client-typescript/telnet_negotiation.ts", "../../client-typescript/websocket.ts", "../../client-typescript/app.ts", "../../client-typescript/AliasesUI.ts", "../../client-typescript/TriggersUI.ts", "../../client-typescript/KeyBindingsUI.ts", "../../client-typescript/VariablesUI.ts", "../../client-typescript/ProfilesUI.ts", "../../client-typescript/AppSettingsUI.ts", "../../client-typescript/AppSettings.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\n// Turn this on to unhide the accessibility tree and display it under\n// (instead of overlapping with) the terminal.\nconst DEBUG = false;\n\nexport class AccessibilityManager extends Disposable {\n  private _debugRootContainer: HTMLElement | undefined;\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _rowColumns: WeakMap<HTMLElement, number[]> = new WeakMap();\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n\n    if (DEBUG) {\n      this._accessibilityContainer.classList.add('debug');\n      this._rowContainer.classList.add('debug');\n\n      // Use a `<div class=\"xterm\">` container so that the css will still apply.\n      this._debugRootContainer = document.createElement('div');\n      this._debugRootContainer.classList.add('xterm');\n\n      this._debugRootContainer.appendChild(document.createTextNode('------start a11y------'));\n      this._debugRootContainer.appendChild(this._accessibilityContainer);\n      this._debugRootContainer.appendChild(document.createTextNode('------end a11y------'));\n\n      this._terminal.element.insertAdjacentElement('afterend', this._debugRootContainer);\n    } else {\n      this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n    }\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(addDisposableDomListener(document, 'selectionchange', () => this._handleSelectionChange()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      if (DEBUG) {\n        this._debugRootContainer!.remove();\n      } else {\n        this._accessibilityContainer.remove();\n      }\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const line = buffer.lines.get(buffer.ydisp + i);\n      const columns: number[] = [];\n      const lineData = line?.translateToString(true, undefined, undefined, columns) || '';\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n          this._rowColumns.set(element, [0, 1]);\n        } else {\n          element.textContent = lineData;\n          this._rowColumns.set(element, columns);\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleSelectionChange(): void {\n    if (this._rowElements.length === 0) {\n      return;\n    }\n\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      // Only do something when the anchorNode is inside the row container. This\n      // behavior mirrors what we do with mouse --- if the mouse clicks\n      // somewhere outside of the terminal, we don't clear the selection.\n      if (this._rowContainer.contains(selection.anchorNode)) {\n        this._terminal.clearSelection();\n      }\n      return;\n    }\n\n    if (!selection.anchorNode || !selection.focusNode) {\n      console.error('anchorNode and/or focusNode are null');\n      return;\n    }\n\n    // Sort the two selection points in document order.\n    let begin = { node: selection.anchorNode, offset: selection.anchorOffset };\n    let end = { node: selection.focusNode, offset: selection.focusOffset };\n    if ((begin.node.compareDocumentPosition(end.node) & Node.DOCUMENT_POSITION_PRECEDING) || (begin.node === end.node && begin.offset > end.offset) ) {\n      [begin, end] = [end, begin];\n    }\n\n    // Clamp begin/end to the inside of the row container.\n    if (begin.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING)) {\n      begin = { node: this._rowElements[0].childNodes[0], offset: 0 };\n    }\n    if (!this._rowContainer.contains(begin.node)) {\n      // This happens when `begin` is below the last row.\n      return;\n    }\n    const lastRowElement = this._rowElements.slice(-1)[0];\n    if (end.node.compareDocumentPosition(lastRowElement) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING)) {\n      end = {\n        node: lastRowElement,\n        offset: lastRowElement.textContent?.length ?? 0\n      };\n    }\n    if (!this._rowContainer.contains(end.node)) {\n      // This happens when `end` is above the first row.\n      return;\n    }\n\n    const toRowColumn = ({ node, offset }: typeof begin): {row: number, column: number} | null => {\n      // `node` is either the row element or the Text node inside it.\n      const rowElement: any = node instanceof Text ? node.parentNode : node;\n      let row = parseInt(rowElement?.getAttribute('aria-posinset'), 10) - 1;\n      if (isNaN(row)) {\n        console.warn('row is invalid. Race condition?');\n        return null;\n      }\n\n      const columns = this._rowColumns.get(rowElement);\n      if (!columns) {\n        console.warn('columns is null. Race condition?');\n        return null;\n      }\n\n      let column = offset < columns.length ? columns[offset] : columns.slice(-1)[0] + 1;\n      if (column >= this._terminal.cols) {\n        ++row;\n        column = 0;\n      }\n      return {\n        row,\n        column\n      };\n    };\n\n    const beginRowColumn = toRowColumn(begin);\n    const endRowColumn = toRowColumn(end);\n\n    if (!beginRowColumn || !endRowColumn) {\n      return;\n    }\n\n    if (beginRowColumn.row > endRowColumn.row || (beginRowColumn.row === endRowColumn.row && beginRowColumn.column >= endRowColumn.column)) {\n      // This should not happen unless we have some bugs.\n      throw new Error('invalid range');\n    }\n\n    this._terminal.select(\n      beginRowColumn.column,\n      beginRowColumn.row,\n      (endRowColumn.row - beginRowColumn.row) * this._terminal.cols - beginRowColumn.column + endRowColumn.column\n    );\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { ILinkProviderService, IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier extends Disposable implements ILinkifier2 {\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILinkProviderService private readonly _linkProviderService: ILinkProviderService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n      // Clear out link providers as they could easily cause an embedder memory leak\n      this._activeProviderReplies?.clear();\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviderService.linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviderService.linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._lastMouseEvent) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n        // Sanity check, this shouldn't happen in practice as this listener would be disposed\n        if (!this._currentLink) {\n          return;\n        }\n        // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n        // cleared.\n        const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n        const end = this._bufferService.buffer.ydisp + 1 + e.end;\n        // Only clear the link if the viewport change happened on this line\n        if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n          this._clearCurrentLink(start, end);\n          if (this._lastMouseEvent) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }\n      }));\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink } from 'browser/Types';\nimport { ILinkProvider } from 'browser/services/Services';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier } from './Linkifier';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, CustomWheelEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, ILinkProviderService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { channels, color } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from '@xterm/xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { LinkProviderService } from 'browser/services/LinkProviderService';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  public linkifier: ILinkifier2 | undefined;\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n  private _customWheelEventHandler: CustomWheelEventHandler | undefined;\n\n  // Browser services\n  private _decorationService: DecorationService;\n  private _linkProviderService: ILinkProviderService;\n\n  // Optional browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n    this._linkProviderService = this._instantiationService.createInstance(LinkProviderService);\n    this._instantiationService.setService(ILinkProviderService, this._linkProviderService);\n    this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const colorRgb = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(colorRgb)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = channels.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = channels.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: FocusEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    this.register(addDisposableDomListener(this.screenElement, 'mousemove', (ev: MouseEvent) => this.updateCursorStyle(ev)));\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: FocusEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.linkifier = this.register(this._instantiationService.createInstance(Linkifier, this.screenElement));\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier!);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          if (self._customWheelEventHandler && self._customWheelEventHandler(ev as WheelEvent) === false) {\n            return false;\n          }\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (this._customWheelEventHandler && this._customWheelEventHandler(ev) === false) {\n        return false;\n      }\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent | MouseEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public attachCustomWheelEventHandler(customWheelEventHandler: CustomWheelEventHandler): void {\n    this._customWheelEventHandler = customWheelEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._linkProviderService.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n  private _selectionRenderModel: ISelectionRenderModel = createSelectionRenderModel();\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    const blinkAnimationUnderlineId = `blink_underline_${this._terminalClass}`;\n    const blinkAnimationBarId = `blink_bar_${this._terminalClass}`;\n    const blinkAnimationBlockId = `blink_block_${this._terminalClass}`;\n    styles +=\n      `@keyframes ${blinkAnimationUnderlineId} {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes ${blinkAnimationBarId} {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes ${blinkAnimationBlockId} {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` animation: ${blinkAnimationUnderlineId} 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` animation: ${blinkAnimationBarId} 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: ${blinkAnimationBlockId} 1s step-end infinite;` +\n      `}` +\n      // !important helps fix an issue where the cursor will not render on top of the selection,\n      // however it's very hard to fix this issue and retain the blink animation without the use of\n      // !important. So this edge case fails when cursor blink is on.\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS}:not(.${RowCss.CURSOR_BLINK_CLASS}) {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n    this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode);\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    this._selectionRenderModel.update(this._terminal, start, end, columnSelectMode);\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = this._selectionRenderModel.viewportStartRow;\n    const viewportEndRow = this._selectionRenderModel.viewportEndRow;\n    const viewportCappedStartRow = this._selectionRenderModel.viewportCappedStartRow;\n    const viewportCappedEndRow = this._selectionRenderModel.viewportCappedEndRow;\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    const left = colStart * this.dimensions.css.cell.width;\n    let width = this.dimensions.css.cell.width * (colEnd - colStart);\n    if (left + width > this.dimensions.css.canvas.width) {\n      width = this.dimensions.css.canvas.width - left;\n    }\n\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${left}px`;\n    element.style.width = `${width}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { channels, color } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { treatGlyphAsBackgroundColor } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = channels.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = channels.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || treatGlyphAsBackgroundColor(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      if (this._flat[cp] !== WidthCacheSettings.FLAT_UNSET) {\n        return this._flat[cp];\n      }\n      const width = this._measure(c, 0);\n      if (width > 0) {\n        this._flat[cp] = width;\n      }\n      return width;\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      if (width > 0) {\n        this._holey!.set(key, width);\n      }\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isNerdFontGlyph(codepoint: number): boolean {\n  return 0xE000 <= codepoint && codepoint <= 0xF8FF;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function isEmoji(codepoint: number): boolean {\n  return (\n    codepoint >= 0x1F600 && codepoint <= 0x1F64F || // Emoticons\n    codepoint >= 0x1F300 && codepoint <= 0x1F5FF || // Misc Symbols and Pictographs\n    codepoint >= 0x1F680 && codepoint <= 0x1F6FF || // Transport and Map\n    codepoint >= 0x2600  && codepoint <= 0x26FF  || // Misc symbols\n    codepoint >= 0x2700  && codepoint <= 0x27BF  || // Dingbats\n    codepoint >= 0xFE00  && codepoint <= 0xFE0F  || // Variation Selectors\n    codepoint >= 0x1F900 && codepoint <= 0x1F9FF || // Supplemental Symbols and Pictographs\n    codepoint >= 0x1F1E6 && codepoint <= 0x1F1FF\n  );\n}\n\nexport function allowRescaling(codepoint: number | undefined, width: number, glyphSizeX: number, deviceCellWidth: number): boolean {\n  return (\n    // Is single cell width\n    width === 1 &&\n    // Glyph exceeds cell bounds, add 50% to avoid hurting readability by rescaling glyphs that\n    // barely overlap\n    glyphSizeX > Math.ceil(deviceCellWidth * 1.5) &&\n    // Never rescale ascii\n    codepoint !== undefined && codepoint > 0xFF &&\n    // Never rescale emoji\n    !isEmoji(codepoint) &&\n    // Never rescale powerline or nerd fonts\n    !isPowerlineGlyph(codepoint) && !isNerdFontGlyph(codepoint)\n  );\n}\n\nexport function treatGlyphAsBackgroundColor(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n\nexport function computeNextVariantOffset(cellWidth: number, lineWidth: number, currentOffset: number = 0): number {\n  return (cellWidth - (Math.round(lineWidth) * 2 - currentOffset)) % (Math.round(lineWidth) * 2);\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from 'browser/Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from '@xterm/xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: ITerminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportY = terminal.buffers.active.ydisp;\n    const viewportStartRow = start[1] - viewportY;\n    const viewportEndRow = end[1] - viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    try {\n      this._measureStrategy = this.register(new TextMetricsMeasureStrategy(this._optionsService));\n    } catch {\n      this._measureStrategy = this.register(new DomMeasureStrategy(document, parentElement, this._optionsService));\n    }\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): Readonly<IMeasureResult>;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\nconst enum DomMeasureStrategyConstants {\n  REPEAT = 32\n}\n\nabstract class BaseMeasureStategy extends Disposable implements IMeasureStrategy {\n  protected _result: IMeasureResult = { width: 0, height: 0 };\n\n  protected _validateAndSet(width: number | undefined, height: number | undefined): void {\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (width !== undefined && width > 0 && height !== undefined && height > 0) {\n      this._result.width = width;\n      this._result.height = height;\n    }\n  }\n\n  public abstract measure(): Readonly<IMeasureResult>;\n}\n\nclass DomMeasureStrategy extends BaseMeasureStategy {\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(DomMeasureStrategyConstants.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    this._validateAndSet(Number(this._measureElement.offsetWidth) / DomMeasureStrategyConstants.REPEAT, Number(this._measureElement.offsetHeight));\n\n    return this._result;\n  }\n}\n\nclass TextMetricsMeasureStrategy extends BaseMeasureStategy {\n  private _canvas: OffscreenCanvas;\n  private _ctx: OffscreenCanvasRenderingContext2D;\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    // This will throw if any required API is not supported\n    this._canvas = new OffscreenCanvas(100, 100);\n    this._ctx = this._canvas.getContext('2d')!;\n    const a = this._ctx.measureText('W');\n    if (!('width' in a && 'fontBoundingBoxAscent' in a && 'fontBoundingBoxDescent' in a)) {\n      throw new Error('Required font metrics not supported');\n    }\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;\n    const metrics = this._ctx.measureText('W');\n    this._validateAndSet(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "import { ILinkProvider, ILinkProviderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport class LinkProviderService extends Disposable implements ILinkProviderService {\n  declare public serviceBrand: undefined;\n\n  public readonly linkProviders: ILinkProvider[] = [];\n\n  constructor() {\n    super();\n    this.register(toDisposable(() => this.linkProviders.length = 0));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this.linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this.linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this.linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n  private _observerDisposable = this.register(new MutableDisposable());\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange = this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end), coreBrowserService);\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio',\n      'rescaleOverlappingGlyphs'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    this._registerIntersectionObserver(coreBrowserService.window, screenElement);\n    this.register(coreBrowserService.onWindowChange((w) => this._registerIntersectionObserver(w, screenElement)));\n  }\n\n  private _registerIntersectionObserver(w: Window & typeof globalThis, screenElement: HTMLElement): void {\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in w) {\n      const observer = new w.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this._observerDisposable.value = toDisposable(() => observer.disconnect());\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value?.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ILink, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n\n\nexport const ILinkProviderService = createDecorator<ILinkProviderService>('LinkProviderService');\nexport interface ILinkProviderService extends IDisposable {\n  serviceBrand: undefined;\n  readonly linkProviders: ReadonlyArray<ILinkProvider>;\n  registerLinkProvider(linkProvider: ILinkProvider): IDisposable;\n}\nexport interface ILinkProvider {\n  provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return channels.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  // Attempt to set get the shared canvas context\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  try {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n  catch {\n    // noop\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return channels.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return channels.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return channels.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function blend(bg: number, fg: number): number {\n    $a = (fg & 0xFF) / 0xFF;\n    if ($a === 1) {\n      return fg;\n    }\n    const fgR = (fg >> 24) & 0xFF;\n    const fgG = (fg >> 16) & 0xFF;\n    const fgB = (fg >> 8) & 0xFF;\n    const bgR = (bg >> 24) & 0xFF;\n    const bgG = (bg >> 16) & 0xFF;\n    const bgB = (bg >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    return channels.toRgba($r, $g, $b);\n  }\n\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public input(data: string, wasUserInput: boolean = true): void {\n    this.coreService.triggerDataEvent(data, wasUserInput);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, curAttr);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodepoint(oldCol++, 0, 1, curAttr);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodepoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x++, code, chWidth, curAttr);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x, 0, 1, curAttr);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined' && 'title' in (process as any)) ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodepoint(index: number, codePoint: number, width: number, attrs: IAttributeData): void {\n    if (attrs.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = attrs.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = attrs.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = attrs.bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodepoint(this.length - 1, 0, 1, fillCellData);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodepoint(pos, 0, 1, fillCellData);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodepoint(end, 0, 1, fillCellData);\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodepoint(end, 0, 1, fillCellData);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  /**\n   * Translates the buffer line to a string.\n   *\n   * @param trimRight Whether to trim any empty cells on the right.\n   * @param startCol The column to start the string (0-based inclusive).\n   * @param endCol The column to end the string (0-based exclusive).\n   * @param outColumns if specified, this array will be filled with column numbers such that\n   * `returnedString[i]` is displayed at `outColumns[i]` column. `outColumns[returnedString.length]`\n   * is where the character following `returnedString` will be displayed.\n   *\n   * When a single cell is translated to multiple UTF-16 code units (e.g. surrogate pair) in the\n   * returned string, the corresponding entries in `outColumns` will have the same column number.\n   */\n  public translateToString(trimRight?: boolean, startCol?: number, endCol?: number, outColumns?: number[]): string {\n    startCol = startCol ?? 0;\n    endCol = endCol ?? this.length;\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    if (outColumns) {\n      outColumns.length = 0;\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      const chars = (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      result += chars;\n      if (outColumns) {\n        for (let i = 0; i < chars.length; ++i) {\n          outColumns.push(startCol);\n        }\n      }\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by at least 1\n    }\n    if (outColumns) {\n      outColumns.push(startCol);\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from '@xterm/xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      result.key = ev.ctrlKey ? '\\b' : C0.DEL; // ^H or ^?\n      if (ev.altKey) {\n        result.key = C0.ESC + result.key;\n      }\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from '@xterm/xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rescaleOverlappingGlyphs: false,\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n\n    // Clear out options that could link outside xterm.js as they could easily cause an embedder\n    // memory leak\n    this.register(toDisposable(() => {\n      this.rawOptions.linkHandler = null;\n      this.rawOptions.documentOverride = null;\n    }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rescaleOverlappingGlyphs?: boolean;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from '@xterm/xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public input(data: string, wasUserInput: boolean = true): void {\n    this._core.input(data, wasUserInput);\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public attachCustomWheelEventHandler(customWheelEventHandler: (event: WheelEvent) => boolean): void {\n    this._core.attachCustomWheelEventHandler(customWheelEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport type { Terminal, ITerminalAddon } from '@xterm/xterm';\nimport type { FitAddon as IFitApi } from '@xterm/addon-fit';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon , IFitApi {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n", "enum Options {\r\n    ECHO = 1,\r\n    MUDServerStatusProtocolVariable = 1,\r\n    MUDServerStatusProtocolValue = 2,\r\n    SupressGoAhead = 3,\r\n    TelnetType = 24,\r\n    MUDServerStatusProtocol = 70,\r\n    MUDSoundProtocol = 90,\r\n    MUDeXtensionProtocol = 91,\r\n    SubNegotiationEnd = 240,\r\n    GoAhead = 249,\r\n    SubNegotiation = 250,\r\n    WILL = 251,\r\n    DO = 253,\r\n    WONT = 252,\r\n    DONT = 254,\r\n    InterpretAsCommand = 255,\r\n}\r\n\r\nexport class TelnetOption {\r\n    public Enabled: boolean = false;\r\n}\r\n\r\nexport class EchoOption extends TelnetOption {}\r\n\r\nexport class SupressGoAhead extends TelnetOption {}\r\n\r\nexport class NegotiateResponse {\r\n    public NewInput: Uint8Array = new Uint8Array();\r\n    public Response: Uint8Array = new Uint8Array();\r\n}\r\n\r\nexport class TelnetNegotiator {\r\n    public Options: Array<TelnetOption> = [];\r\n    private SupportedClientTypes: Array<string> = [\"256COLOR\", \"VT100\", \"ANSI\", \"TRUECOLOR\"];\r\n    private NegotiatedClientTypes: Array<string> = [];\r\n    private currentTypeIndex: number = -1;\r\n\r\n    private readonly ClientNegotiateTelnetType: Uint8Array = new Uint8Array([\r\n        Options.InterpretAsCommand,\r\n        Options.SubNegotiation,\r\n        Options.TelnetType,\r\n        0\r\n    ]);\r\n\r\n    public IsNegotiationRequired(input: Uint8Array): boolean {\r\n        return input.includes(Options.InterpretAsCommand);\r\n    }\r\n\r\n    public Negotiate(input: Uint8Array): NegotiateResponse {\r\n        const response = new NegotiateResponse();\r\n        let i = 0;\r\n        let lastIndex = 0;\r\n        \r\n        while (i < input.length) {\r\n            if (input[i] === Options.InterpretAsCommand) {\r\n                response.NewInput = this.concatUint8Arrays(response.NewInput, input.slice(lastIndex, i));\r\n                i++; // Move past IAC\r\n                if (i >= input.length) break;\r\n\r\n                const command = input[i];\r\n                i++; // Move past command\r\n\r\n                switch (command) {\r\n                    case Options.DO:\r\n                    case Options.DONT:\r\n                    case Options.WILL:\r\n                    case Options.WONT:\r\n                        if (i >= input.length) break;\r\n                        const option = input[i];\r\n                        i++; // Move past option\r\n                        response.Response = this.concatUint8Arrays(response.Response, this.handleCommand(command, option));\r\n                        break;\r\n                    \r\n                    case Options.SubNegotiation:\r\n                        const subNegResponse = this.handleSubNegotiation(input.slice(i));\r\n                        response.Response = this.concatUint8Arrays(response.Response, subNegResponse);\r\n                        i += this.findSubNegotiationEnd(input.slice(i)) + 1;\r\n                        break;\r\n                }\r\n                lastIndex = i;\r\n            } else {\r\n                i++; // Move to next character if not IAC\r\n            }\r\n        }\r\n        \r\n        response.NewInput = this.concatUint8Arrays(response.NewInput, input.slice(lastIndex));\r\n\r\n        return response;\r\n    }\r\n\r\n    private handleCommand(command: number, option: number): Uint8Array {\r\n        switch (option) {\r\n            case Options.TelnetType:\r\n                if (command === Options.DO || command === Options.WILL) {\r\n                    return this.SendNextClientType();\r\n                }\r\n                break;\r\n            // Add more cases for other options as needed\r\n        }\r\n        return new Uint8Array();\r\n    }\r\n\r\n    private handleSubNegotiation(input: Uint8Array): Uint8Array {\r\n        if (input[0] === Options.TelnetType && input[1] === 1) {\r\n            return this.SendNextClientType();\r\n        }\r\n        return new Uint8Array();\r\n    }\r\n\r\n    private findSubNegotiationEnd(input: Uint8Array): number {\r\n        for (let i = 0; i < input.length - 1; i++) {\r\n            if (input[i] === Options.InterpretAsCommand && \r\n                input[i + 1] === Options.SubNegotiationEnd) {\r\n                return i + 1;\r\n            }\r\n        }\r\n        return input.length;\r\n    }\r\n\r\n    public SendNextClientType(): Uint8Array {\r\n        this.currentTypeIndex = (this.currentTypeIndex + 1) % this.SupportedClientTypes.length;\r\n        const clientType = this.SupportedClientTypes[this.currentTypeIndex];\r\n        \r\n        const clientTypeBytes = new TextEncoder().encode(clientType);\r\n        return this.concatUint8Arrays(\r\n            this.ClientNegotiateTelnetType,\r\n            clientTypeBytes,\r\n            new Uint8Array([Options.InterpretAsCommand, Options.SubNegotiationEnd])\r\n        );\r\n    }\r\n\r\n    private concatUint8Arrays(...arrays: Uint8Array[]): Uint8Array {\r\n        const totalLength = arrays.reduce((acc, value) => acc + value.length, 0);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const array of arrays) {\r\n            result.set(array, offset);\r\n            offset += array.length;\r\n        }\r\n        return result;\r\n    }\r\n}", "// websocket.ts\n\nimport { TelnetNegotiator, NegotiateResponse } from './telnet_negotiation';\n\n/**\n * Type definition for a function that handles messages\n */\ntype MessageHandler = (message: string) => void;\n\n/**\n * Type definition for a function that handles connection events\n */\ntype ConnectionHandler = () => void;\n\n/**\n * WebSocketManager class\n * Manages WebSocket connections for a MUD client\n */\nexport class WebSocketManager {\n    private negotiator: TelnetNegotiator = new TelnetNegotiator();\n\n    // The WebSocket instance\n    private socket: WebSocket | null = null;\n    \n    // Handler for outputting messages (e.g., to the UI)\n    private outputHandler: MessageHandler;\n    \n    // Handler for processing input messages\n    private inputHandler: MessageHandler;\n    \n    // Handler called when a connection is established\n    private onConnectHandler: ConnectionHandler;\n\n    public port: number;\n    /**\n     * Constructor for WebSocketManager\n     * @param outputHandler Function to handle output messages\n     * @param inputHandler Function to handle input messages\n     * @param onConnectHandler Function to call when connection is established\n     */\n    constructor(\n        outputHandler: MessageHandler,\n        inputHandler: MessageHandler,\n        onConnectHandler: ConnectionHandler,\n        port: number\n    ) {\n        this.outputHandler = outputHandler;\n        this.inputHandler = inputHandler;\n        this.onConnectHandler = onConnectHandler;\n        this.port = port;\n    }\n\n    private handleMessage(event: MessageEvent) {\n        if (event.data instanceof ArrayBuffer) {\n            // Handle binary data\n            const uint8Array = new Uint8Array(event.data);\n            //console.log(\"Received binary data:\", uint8Array);\n            \n            // Process the binary data\n            this.processBinaryData(uint8Array);\n        } else if (typeof event.data === \"string\") {\n            // Handle text data\n            //console.log(\"Received text data:\", event.data);\n            this.processTextData(event.data);\n        } else {\n            console.warn(\"Received unknown data type:\", typeof event.data);\n        }\n    }\n\n    private processBinaryData(data: Uint8Array) {\n        if (this.negotiator.IsNegotiationRequired(data)) {\n            const response: NegotiateResponse = this.negotiator.Negotiate(data);\n            if (response.Response.length > 0) {\n                this.sendResponse(response.Response);\n            }\n            if (response.NewInput.length > 0) {\n                this.outputHandler(new TextDecoder().decode(response.NewInput));\n            }\n        } else {\n            this.outputHandler(new TextDecoder().decode(data));\n        }\n    }\n\n    private processTextData(data: string) {\n        this.outputHandler(data);\n    }\n\n    private sendResponse(response: Uint8Array) {\n        if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n            this.socket.send(response);\n        }\n    }\n\n    disconnect(): void {\n        if(this.socket != null) {\n            this.socket.close();\n            this.socket = null;\n        }\n    }\n    /**\n     * Establishes a WebSocket connection to the server\n     */\n    connect(): void {\n        this.disconnect();\n        const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n        const host = window.location.hostname;\n        const port = this.port;\n\n        this.socket = new WebSocket(`${protocol}//${host}:${port}`);\n\n        this.socket.binaryType = \"arraybuffer\";\n        this.socket.onmessage = this.handleMessage.bind(this);\n\n        this.socket.onopen = (e: Event) => {\n            this.outputHandler('Connected to MUD server\\n');\n            this.onConnectHandler();\n        };\n\n        this.socket.onclose = (event: CloseEvent) => {\n            const message = event.wasClean\n                ? `Connection closed cleanly, code=${event.code} reason=${event.reason}\\n`\n                : '\\nConnection died\\n';\n            this.outputHandler(message);\n        };\n\n        this.socket.onerror = (error: Event) => {\n            this.outputHandler(`\\nError: ${(error as ErrorEvent).message}\\n`);\n        };\n    }\n\n    /**\n     * Sends a message through the WebSocket connection\n     * @param message The message to send as a string\n     */\n    sendMessage(message: string): void {\n        if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n            // Only append a newline if the message doesn't already end with one\n            const messageToSend = message.endsWith('\\n') ? message : message + '\\n';\n            const uint8Array = new TextEncoder().encode(messageToSend);\n            this.socket.send(uint8Array);\n            this.inputHandler(message);\n        } else {\n            this.outputHandler('Not connected. Type /connect to connect to the MUD server.\\n');\n        }\n    }\n\n    /**\n     * Checks if the WebSocket connection is currently open\n     * @returns true if connected, false otherwise\n     */\n    isConnected(): boolean {\n        return this.socket !== null && this.socket.readyState === WebSocket.OPEN;\n    }\n}", "import { WebSocketManager } from './websocket';\nimport { Terminal } from '@xterm/xterm';\nimport { FitAddon } from '@xterm/addon-fit';\nimport { AppSettingsUI } from './AppSettingsUI';\nimport { AppSettings } from './AppSettings';\n\nexport class App {\n    private terminal: Terminal;\n    private fitAddon: FitAddon;\n    public terminalElement: HTMLElement | null;\n    private inputField: HTMLInputElement;\n    private wsManager: WebSocketManager;\n    private commandHistory: string[] = [];\n    private currentHistoryIndex: number = -1;\n    private readonly maxHistoryLength: number = 20;\n    public settings: AppSettings;\n    private settingsProfiles: { name: string, settings: AppSettings }[] = [];\n    private currentProfileName: string = \"Default\";\n    private settingsUI: AppSettingsUI;\n    private inTriggers: boolean = false;\n    \n    constructor(terminalId: string, port: number) {\n        this.terminalElement = document.getElementById(terminalId);\n        this.inputField = document.getElementById('input') as HTMLInputElement;\n\n        if (!this.terminalElement) {\n            throw new Error(`Terminal element with ID '${terminalId}' not found`);\n        }\n        if (!this.inputField) {\n            throw new Error('Input field element not found');\n        }\n        \n        // Load settings before initializing terminal\n        this.settings = this.loadSettings();\n        \n        // Initialize terminal\n        this.terminal = new Terminal({\n            convertEol: true,\n            fontSize: this.settings.fontSize,\n            fontFamily: 'monospace',\n            theme: {\n                background: this.settings.backgroundColor,\n                foreground: this.settings.foregroundColor,\n                cursor: this.settings.foregroundColor\n            },\n            cursorBlink: true\n        });\n        \n        this.fitAddon = new FitAddon();\n        this.terminal.loadAddon(this.fitAddon);\n        this.terminal.open(this.terminalElement);\n        this.fitAddon.fit();\n\n        // Initialize WebSocket manager\n        this.wsManager = new WebSocketManager(\n            this.appendToOutput.bind(this),\n            (message: string) => {},\n            () => this.appendToOutput('Connected successfully\\n'),\n            port\n        );\n        \n        // Initialize settings UI\n        this.settingsUI = new AppSettingsUI(this);\n        this.fitAddon.fit();\n        // Initialize event listeners\n        this.initializeEventListeners();\n        \n        // Make the app available globally\n        (window as any).mudApp = this;\n        \n        // Display welcome message\n        this.appendToOutput('Welcome to the Web MUD Client\\n');\n        this.appendToOutput('Type /connect to connect to the MUD server\\n');\n        this.appendToOutput('Use numpad keys for quick movement:\\n');\n        this.appendToOutput('8: north, 6: east, 2: south, 4: west, 9: up, 3: down\\n');\n        \n        // Add /connect to history and connect\n        this.addToHistory(\"/connect\");\n        this.wsManager.connect();\n    }\n\n    public resize()\n    {\n        this.fitAddon.fit();\n    }\n\n    // Load settings from localStorage\n    private loadSettings(): AppSettings {\n        // First load the profiles list\n        const savedProfiles = localStorage.getItem('mudClientProfiles');\n        \n        if (savedProfiles) {\n            try {\n                this.settingsProfiles = JSON.parse(savedProfiles);\n            } catch (e) {\n                console.error('Failed to parse saved profiles:', e);\n                this.settingsProfiles = [];\n            }\n        }\n        \n        // If no profiles exist, create a default one\n        if (this.settingsProfiles.length === 0) {\n            const defaultSettings = new AppSettings();\n            this.settingsProfiles.push({\n                name: \"Default\",\n                settings: defaultSettings\n            });\n            this.saveProfiles();\n        }\n        \n        // Get the last used profile name\n        const lastUsedProfile = localStorage.getItem('mudClientCurrentProfile') || \"Default\";\n        this.currentProfileName = lastUsedProfile;\n        \n        // Find the current profile\n        const currentProfile = this.settingsProfiles.find(p => p.name === this.currentProfileName);\n        \n        if (currentProfile) {\n            return Object.assign(new AppSettings(), currentProfile.settings);\n        } else {\n            // If current profile not found, use the first one\n            this.currentProfileName = this.settingsProfiles[0].name;\n            return Object.assign(new AppSettings(), this.settingsProfiles[0].settings);\n        }\n    }\n\n    // Save the profile list to localStorage\n    private saveProfiles(): void {\n        localStorage.setItem('mudClientProfiles', JSON.stringify(this.settingsProfiles));\n        localStorage.setItem('mudClientCurrentProfile', this.currentProfileName);\n    }\n\n    // Save the current settings to the active profile\n    public saveSettings(): void {\n        // Find the current profile index\n        const profileIndex = this.settingsProfiles.findIndex(p => p.name === this.currentProfileName);\n        \n        if (profileIndex >= 0) {\n            // Update the profile with current settings\n            this.settingsProfiles[profileIndex].settings = this.settings;\n        } else {\n            // If profile not found, create a new one\n            this.settingsProfiles.push({\n                name: this.currentProfileName,\n                settings: this.settings\n            });\n        }\n        \n        // Save profiles to localStorage\n        this.saveProfiles();\n    }\n\n    // Apply settings to terminal\n    public applySettings(newSettings?: AppSettings): void {\n        if (newSettings) {\n            // Update the settings with the new values\n            this.settings = {...this.settings, ...newSettings};\n            \n            // Save the updated settings\n            this.saveSettings();\n        }\n        \n        console.log(\"Applying settings:\", this.settings);\n        \n        // Store current terminal content\n        const terminalContent = this.captureTerminalContent();\n        \n        // Dispose of old terminal\n        this.terminal.dispose();\n        \n        // Create new terminal with updated options\n        this.terminal = new Terminal({\n            convertEol: true,\n            fontSize: this.settings.fontSize,\n            fontFamily: 'monospace',\n            theme: {\n                background: this.settings.backgroundColor,\n                foreground: this.settings.foregroundColor,\n                cursor: this.settings.foregroundColor\n            },\n            cursorBlink: true,\n            scrollback: 5000 // Add larger scrollback buffer\n        });\n        \n        // Reload addons\n        this.fitAddon = new FitAddon();\n        this.terminal.loadAddon(this.fitAddon);\n        \n        // Reopen terminal in the same container\n        this.terminal.open(this.terminalElement!);\n        \n        // Restore the previously captured content\n        this.restoreTerminalContent(terminalContent);\n        \n        // Resize the terminal to fit its container\n        this.fitAddon.fit();\n        \n        // Reattach event listeners\n        this.attachTerminalEventListeners();\n        \n        // Update UI elements\n        this.settingsUI.updateUI();\n    }\n\n    /**\n     * Captures the current terminal content with color codes\n     * @returns Array of terminal lines with formatting preserved\n     */\n    private captureTerminalContent(): string[] {\n        const buffer = this.terminal.buffer.active;\n        const terminalContent: string[] = [];\n        \n        // Get total number of lines in buffer (including scrollback)\n        const totalLines = buffer.length;\n        \n        // Capture each line of content with formatting\n        for (let i = 0; i < totalLines; i++) {\n            const line = buffer.getLine(i);\n            if (line) {\n                let formattedLine = '';\n                let currentFg: number | undefined = undefined;\n                let currentBg: number | undefined = undefined;\n                let currentAttrs = 0;\n                \n                // Process each cell in the line to preserve attributes\n                for (let j = 0; j < line.length; j++) {\n                    const cell = line.getCell(j);\n                    if (!cell) continue;\n                    \n                    const char = cell.getChars() || ' ';\n                    \n                    // Access attributes in a version-compatible way\n                    const fg = cell.getFgColor();\n                    const bg = cell.getBgColor();\n                    \n                    // Check for cell attributes based on available properties\n                    const isBold = cell.isBold?.() != 0 || false;\n                    const isItalic = cell.isItalic?.() != 0 || false;\n                    const isUnderline = cell.isUnderline?.() != 0 || false;\n                    const isDim = cell.isDim?.() != 0 || false;\n                    const isBlink = cell.isBlink?.() != 0 || false;\n                    const isInverse = cell.isInverse?.() != 0 || false;\n                    const isInvisible = cell.isInvisible?.() != 0 || false;\n                    \n                    // Construct a numeric representation of attributes for comparison\n                    const currentCellAttrs = (isBold ? 1 : 0) |\n                                            (isDim ? 2 : 0) |\n                                            (isItalic ? 4 : 0) |\n                                            (isUnderline ? 8 : 0) |\n                                            (isBlink ? 16 : 0) |\n                                            (isInverse ? 32 : 0) |\n                                            (isInvisible ? 64 : 0);\n                    \n                    // Check if formatting has changed\n                    if (fg !== currentFg || bg !== currentBg || currentCellAttrs !== currentAttrs) {\n                        // Add ANSI escape sequences to set the new formatting\n                        formattedLine += this.constructAnsiSequence(fg, bg, isBold, isItalic, isUnderline, isDim, isBlink, isInverse, isInvisible);\n                        currentFg = fg;\n                        currentBg = bg;\n                        currentAttrs = currentCellAttrs;\n                    }\n                    \n                    formattedLine += char;\n                }\n                \n                // Reset attributes at the end of each line\n                formattedLine += '\\u001b[0m';\n                terminalContent.push(formattedLine);\n            }\n        }\n        \n        return terminalContent;\n    }\n\n    /**\n     * Constructs an ANSI escape sequence for the given attributes\n     */\n    private constructAnsiSequence(\n        fg: number,\n        bg: number,\n        isBold: boolean,\n        isItalic: boolean,\n        isUnderline: boolean,\n        isDim: boolean,\n        isBlink: boolean,\n        isInverse: boolean,\n        isInvisible: boolean\n    ): string {\n        const codes: number[] = [];\n        \n        // Add formatting based on attributes\n        if (isBold) codes.push(1);      // Bold\n        if (isDim) codes.push(2);       // Dim\n        if (isItalic) codes.push(3);    // Italic\n        if (isUnderline) codes.push(4); // Underline\n        if (isBlink) codes.push(5);     // Blink\n        if (isInverse) codes.push(7);   // Inverse\n        if (isInvisible) codes.push(8); // Hidden\n        \n        // Add foreground color (if specified)\n        if (fg !== undefined && fg !== null && fg != -1) {\n            if (fg < 16) {\n                // Standard colors (0-15)\n                if (fg < 8) {\n                    codes.push(30 + fg);\n                } else {\n                    codes.push(90 + (fg - 8));\n                }\n            } else {\n                // 256 color palette\n                codes.push(38, 5, fg);\n            }\n        }\n        \n        // Add background color (if specified)\n        if (bg !== undefined && bg !== null && bg != -1) {\n            if (bg < 16) {\n                // Standard colors (0-15)\n                if (bg < 8) {\n                    codes.push(40 + bg);\n                } else {\n                    codes.push(100 + (bg - 8));\n                }\n            } else {\n                // 256 color palette\n                codes.push(48, 5, bg);\n            }\n        }\n        \n        return `\\u001b[${codes.join(';')}m`;\n    }\n\n    /**\n     * Restores content to the terminal preserving formatting\n     * @param content Array of terminal content lines with ANSI codes\n     */\n    private restoreTerminalContent(content: string[]): void {\n        if (!content || content.length === 0) {\n            return;\n        }\n        \n        // Clear terminal first to avoid mixing content\n        this.terminal.clear();\n        \n        // Write content with preserved formatting\n        this.terminal.write(content.join('\\r\\n'));\n    }\n\n    // Helper function to escape special regex characters\n    private escapeRegExp(string: string): string {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n    }\n\n    // Show a notification message\n    public showNotification(message: string, isSuccess: boolean = true): void {\n        const feedback = document.createElement('div');\n        feedback.textContent = message;\n        feedback.style.cssText = `\n            position: fixed;\n            left: 50%;\n            top: 20px;\n            transform: translateX(-50%);\n            background: ${isSuccess ? 'rgba(0, 128, 0, 0.8)' : 'rgba(220, 53, 69, 0.8)'};\n            color: white;\n            padding: 10px 20px;\n            border-radius: 4px;\n            z-index: 2000;\n            animation: fadeOut 3s ease-in-out forwards;\n        `;\n        document.body.appendChild(feedback);\n        setTimeout(() => feedback.remove(), 3000);\n    }\n\n    // Add a command to the history\n    private addToHistory(command: string): void {\n        if (command.trim() !== '' && (this.commandHistory.length === 0 || this.commandHistory[0] !== command)) {\n            this.commandHistory.unshift(command);\n            if (this.commandHistory.length > this.maxHistoryLength) {\n                this.commandHistory.pop();\n            }\n            this.currentHistoryIndex = -1;\n        }\n    }\n\n    // Navigate through command history\n    private navigateHistory(direction: 'up' | 'down'): void {\n        if (direction === 'up' && this.currentHistoryIndex < this.commandHistory.length - 1) {\n            this.currentHistoryIndex++;\n        } else if (direction === 'down' && this.currentHistoryIndex > -1) {\n            this.currentHistoryIndex--;\n        }\n        \n        if (this.currentHistoryIndex === -1) {\n            this.inputField.value = '';\n        } else {\n            this.inputField.value = this.commandHistory[this.currentHistoryIndex];\n        }\n        this.inputField.select();\n    }\n\n    // Process aliases in a command\n    public performAliases(command: string): string {\n        // Split the command by newlines to process each line\n        const lines = command.split('\\n');\n        const processedLines: string[] = [];\n        \n        // Process each line individually\n        for (let line of lines) {\n            let processedLine = line.trim();\n            \n            // Skip empty lines\n            if (processedLine === '') {\n                processedLines.push('');\n                continue;\n            }\n            \n            // Check if the line starts with any of our aliases\n            let aliasFound = false;\n            \n            for (const aliasObj of this.settings.Aliases) {\n                // Create a regex to match the alias at the beginning of the line\n                // The alias can be followed by whitespace and additional text\n                const aliasRegex = new RegExp(`^${this.escapeRegExp(aliasObj.alias)}(\\\\s+?.+?)?$`);\n                const match = processedLine.match(aliasRegex);\n                \n                if (match) {\n                    aliasFound = true;\n                    \n                    // Extract any additional text following the alias\n                    const additionalText = match[1] ? match[1].trim() : '';\n                    \n                    // Replace the alias with its command\n                    // If there's additional text, append it to the command\n                    processedLine = additionalText ? \n                        `${aliasObj.command} ${additionalText}` : \n                        aliasObj.command;\n                    \n                    // Once we find a matching alias, stop checking others\n                    break;\n                }\n            }\n            \n            // Add the processed line to our results\n            processedLines.push(processedLine);\n        }\n        \n        // Join the processed lines back together and return\n        return processedLines.join('\\n');\n    }\n\n    // Process variables in a command\n    private processVariables(command: string): string {\n        if (!this.settings.Variables || this.settings.Variables.length === 0 || !command.includes('$')) {\n            return command; // No variables to process or no $ in command\n        }\n        \n        // Create variable map for quick lookup\n        const variableMap = new Map<string, string>();\n        for (const variable of this.settings.Variables) {\n            variableMap.set(variable.name.toUpperCase(), variable.value);\n        }\n        \n        // Replace variables in command\n        let processedCommand = command;\n        \n        // Find all $VARNAME occurrences\n        // This regex matches $VARNAME patterns where VARNAME must start with a letter or underscore\n        // and can contain only letters, numbers, and underscores\n        const variableRegex = /\\$([A-Za-z_]\\w*)/g;\n        let match;\n        \n        while ((match = variableRegex.exec(command)) !== null) {\n            const variableName = match[1].toUpperCase();\n            const value = variableMap.get(variableName);\n            \n            if (value !== undefined) {\n                // Replace $VARNAME with its value\n                processedCommand = processedCommand.replace(new RegExp('\\\\$' + variableName, 'g'), value);\n            }\n        }\n        \n        return processedCommand;\n    }\n\n    // Send a command to the MUD\n    public sendCommand(command: string): void {\n        if (command === \"/\") {\n            this.appendToOutput(\"/connect or /disconnect\\n\");\n        }\n        else if (command.length > 1 && '/connect'.startsWith(command.toLowerCase())) {\n            this.wsManager.connect();\n        }\n        else if (command.length > 1 && '/disconnect'.startsWith(command.toLowerCase())) {\n            this.wsManager.disconnect();\n        } else if (command.toLowerCase() === '/selectinput') {\n            this.inputField.select();\n        } else if (this.wsManager.isConnected()) {\n            // Process aliases and variables\n            command = this.performAliases(command);\n            command = this.processVariables(command);\n            \n            this.wsManager.sendMessage(command);\n            this.appendToOutput(`${command}\\n`);\n        } else {\n            command = this.performAliases(command);\n            command = this.processVariables(command);\n            \n            this.appendToOutput(`${command}\\n`);\n            this.appendToOutput('Not connected. Type /connect to connect to the MUD server.\\n');\n        }\n        \n        // Add command to history\n        this.addToHistory(command);\n    }\n\n    // Append text to the terminal output\n    public appendToOutput(message: string): void {\n        this.terminal.write(message);\n        this.processTriggers(message);\n    }\n\n    // Strip control codes\n    private stripAllTerminalCodes(text: string): string {\n        // Main ANSI escape sequences (colors, formatting)\n        let cleaned = text.replace(/\\u001b\\[\\d*(?:;\\d+)*[A-Za-z]/g, '');\n        \n        // Other terminal control sequences\n        cleaned = cleaned.replace(/\\u001b\\](?:.|[\\n\\r])*?(?:\\u0007|\\u001b\\\\)/g, ''); // OSC sequences\n        cleaned = cleaned.replace(/\\u001b[PX_^].*?(?:\\u001b\\\\|\\u0007)/g, ''); // DCS, SOS, PM, APC sequences\n        cleaned = cleaned.replace(/\\u001b[@-Z\\\\-_]/g, ''); // Single-character escape sequences\n        \n        // Handle legacy color codes used by some MUDs\n        cleaned = cleaned.replace(/\\x03\\d{1,2}(?:,\\d{1,2})?/g, ''); // IRC-style color codes\n        \n        return cleaned;\n    }\n\n    /**\n     * Process triggers for a message\n     * @param text text from the mud\n     * @returns void\n     */\n    private processTriggers(text: string): void {\n        if (!this.settings.Triggers || this.settings.Triggers.length === 0) {\n            return; // No triggers to process\n        }\n        if (this.inTriggers) {\n            return; // Prevent recursive trigger processing\n        }\n        this.inTriggers = true;\n        \n        // Strip ANSI codes for trigger matching\n        const cleanText = this.stripAllTerminalCodes(text);\n        \n        // Check each trigger against the cleaned text\n        for (const trigger of this.settings.Triggers) {\n            let isMatch = false;\n            \n            try {\n                // Use cleaned text for matching\n                isMatch = this.matchTrigger(cleanText, trigger.type, trigger.match);\n                \n                // If we have a match, execute the trigger actions\n                if (isMatch) {\n                    this.executeTriggerActions(trigger.actions, trigger.actionType || 'text');\n                }\n            } catch (error: any) {\n                console.error(`Error processing trigger \"${trigger.match}\": ${error.message}`, error);\n            }\n        }\n        this.inTriggers = false;\n    }\n\n    // Test if a trigger matches text\n    public matchTrigger(text: string, type: string, pattern: string): boolean {\n        try {\n            if (type === 'regex' || !type) {\n                // Default to regex if type is not specified\n                try {\n                    // First try to match against the entire text (multi-line)\n                    const multiLineRegex = new RegExp(pattern, 'm');\n                    return multiLineRegex.test(text);\n                } catch (regexError: any) {\n                    console.error(`Invalid regex in trigger \"${pattern}\": ${regexError.message}`);\n                    return false;\n                }\n            } else if (type === 'substring') {\n                // Substring match can match against the entire text\n                return text.includes(pattern);\n            } else if (type === 'exact') {\n                const lines = text.split('\\n');\n                // Exact match should check each line\n                for (const line of lines) {\n                    if (line === pattern) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            return false;\n        } catch (error: any) {\n            console.error(`Error processing trigger \"${pattern}\": ${error.message}`, error);\n            return false;\n        }\n    }\n\n    // Execute trigger actions\n    private executeTriggerActions(actionsText: string, actionType: string = 'text'): void {\n        if (!actionsText) {\n            return;\n        }\n        \n        // Check action type and handle accordingly\n        if (actionType === 'javascript') {\n            try {\n                // Execute JavaScript code\n                const executeFunction = new Function('mud', 'app', actionsText);\n                executeFunction(this, this); // Pass 'this' twice for flexibility\n            } catch (error: any) {\n                console.error('Error executing JavaScript trigger:', error.message);\n                this.appendToOutput(`Error executing JavaScript trigger: ${error.message}\\n`);\n            }\n        } else {\n            // Default to 'text' action type - send commands to MUD\n            setTimeout(() => {\n                this.sendCommand(actionsText);\n            }, 1);\n        }\n    }\n\n    // Initialize event listeners\n    private initializeEventListeners(): void {\n        // Window resize handler\n        window.addEventListener('resize', () => {\n            this.fitAddon.fit();\n        });\n        \n        // Input field event listener\n        this.inputField.addEventListener('keydown', (e: KeyboardEvent) => {\n            if (this.handleKeyEvent(e.key, e.code, 'keypress', e)) {\n                e.preventDefault();\n            }\n        });\n        \n        // Terminal event listeners\n        this.attachTerminalEventListeners();\n    }\n\n    // Attach event listeners to the terminal\n    private attachTerminalEventListeners(): void {\n        // Terminal selection handler\n        this.terminal.onSelectionChange(() => {\n            const selection = this.terminal.getSelection();\n            if (selection && selection.trim().length > 0) {\n                this.copyToClipboard(selection);\n            }\n        });\n        \n        // Terminal key handler\n        this.terminal.onKey(({ key, domEvent }) => {\n            domEvent.preventDefault();\n            this.handleKeyEvent(domEvent.key, domEvent.code, 'terminal', domEvent);\n        });\n    }\n\n    // Handle key events\n    private handleKeyEvent(key: string, code: string, keyType: 'keydown' | 'keypress' | 'terminal', event?: KeyboardEvent): boolean {\n        // Create the key combination string based on modifiers\n        let keyCombo = '';\n        \n        // If we have the full event object, we can check modifiers\n        if (event) {\n            if (event.ctrlKey) {\n                keyCombo += 'Ctrl+';\n            }\n            \n            if (event.altKey) {\n                keyCombo += 'Alt+';\n            }\n            \n            if (event.shiftKey) {\n                keyCombo += 'Shift+';\n            }\n            \n            // Add the key code\n            keyCombo += event.code;\n        } else {\n            // Fallback to just the code if we don't have the event\n            keyCombo = code;\n        }\n        \n        // First check for exact key combination matches\n        for (let i = 0; i < this.settings.Keybindings.length; i++) {\n            const keybind = this.settings.Keybindings[i];\n            if (keybind.key === keyCombo) {\n                this.sendCommand(keybind.commands);\n                return true; // Indicating that the key was handled\n            }\n        }\n        \n        // If no key combination matched, fall back to checking just the code\n        // This maintains backward compatibility with old keybindings\n        if (keyCombo !== code) {\n            for (let i = 0; i < this.settings.Keybindings.length; i++) {\n                const keybind = this.settings.Keybindings[i];\n                if (keybind.key === code) {\n                    this.sendCommand(keybind.commands);\n                    return true;\n                }\n            }\n        }\n                \n        switch (key) {\n            case 'Enter':\n                // Handle Enter only on keypress or terminal\n                if (keyType !== 'keydown') {\n                    const command = this.inputField.value;\n                    this.addToHistory(command);\n                    this.sendCommand(command);\n                    this.inputField.select();\n                }\n                return true;\n    \n            case 'Backspace':\n                // Handle Backspace only in terminal\n                if (keyType === 'terminal') {\n                    const selStart = this.inputField.selectionStart ?? 0;\n                    const selEnd = this.inputField.selectionEnd ?? 0;\n                    \n                    if (selStart === selEnd && selStart > 0) {\n                        this.inputField.value = this.inputField.value.slice(0, selStart - 1) + \n                                              this.inputField.value.slice(selStart);\n                        this.inputField.selectionStart = this.inputField.selectionEnd = selStart - 1;\n                    } else {\n                        this.inputField.value = this.inputField.value.slice(0, selStart) + \n                                              this.inputField.value.slice(selEnd);\n                        this.inputField.selectionStart = this.inputField.selectionEnd = selStart;\n                    }\n                    return true;\n                }\n                break;\n    \n            case 'ArrowUp':\n            case 'ArrowDown':\n                // Handle arrows in keydown and terminal\n                this.navigateHistory(key === 'ArrowUp' ? 'up' : 'down');\n                return true;\n    \n            case 'ArrowLeft':\n            case 'ArrowRight':\n                // Handle left/right only in terminal\n                if (keyType === 'terminal') {\n                    if (key === 'ArrowLeft') {\n                        this.inputField.selectionStart = this.inputField.selectionEnd = \n                            Math.max(0, (this.inputField.selectionStart ?? 0) - 1);\n                    } else {\n                        this.inputField.selectionStart = this.inputField.selectionEnd = \n                            Math.min(this.inputField.value.length, (this.inputField.selectionStart ?? 0) + 1);\n                    }\n                    return true;\n                }\n                break;\n        }\n    \n        // Handle normal character input only in terminal\n        if (keyType === 'terminal' && key.length === 1 && key.charCodeAt(0) >= 32 && key.charCodeAt(0) <= 126) {\n            const selStart = this.inputField.selectionStart ?? 0;\n            const selEnd = this.inputField.selectionEnd ?? 0;\n            \n            this.inputField.value = \n                this.inputField.value.slice(0, selStart) + \n                key + \n                this.inputField.value.slice(selEnd);\n                \n            this.inputField.selectionStart = this.inputField.selectionEnd = selStart + 1;\n            \n            // Trigger input event\n            this.inputField.dispatchEvent(new Event('input', { bubbles: true }));\n            return true;\n        }\n\n        return false;\n    }\n\n    // Copy text to clipboard\n    private async copyToClipboard(text: string): Promise<void> {\n        try {\n            await navigator.clipboard.writeText(text);\n            this.showNotification('Copied!', true);\n        } catch (err) {\n            console.error('Failed to copy text to clipboard:', err);\n            \n            // Fallback method\n            const textArea = document.createElement('textarea');\n            textArea.value = text;\n            textArea.style.position = 'fixed';\n            textArea.style.left = '-999999px';\n            document.body.appendChild(textArea);\n            textArea.select();\n            \n            try {\n                document.execCommand('copy');\n                this.showNotification('Copied!', true);\n            } catch (err) {\n                console.error('Fallback clipboard copy failed:', err);\n            }\n            \n            document.body.removeChild(textArea);\n        }\n    }\n\n    // Export settings to a JSON file for download\n    public exportSettings(): string {\n        // Get current settings\n        const settings = this.settings;\n        \n        // Convert to JSON string with pretty formatting\n        return JSON.stringify(settings, null, 2);\n    }\n\n    // Import settings from a JSON string\n    public importSettings(settingsJson: string): boolean {\n        try {\n            // Parse the JSON string\n            const importedSettings = JSON.parse(settingsJson);\n            \n            // Validate the imported settings\n            if (!importedSettings ||\n                typeof importedSettings !== 'object' ||\n                !('fontSize' in importedSettings) ||\n                !('backgroundColor' in importedSettings) ||\n                !('foregroundColor' in importedSettings) ||\n                !Array.isArray(importedSettings.Aliases) ||\n                !Array.isArray(importedSettings.Keybindings) ||\n                !Array.isArray(importedSettings.Variables) ||\n                !Array.isArray(importedSettings.Triggers)) {\n                \n                throw new Error('Invalid settings format');\n            }\n            \n            // Apply the imported settings\n            this.settings = importedSettings;\n            this.saveSettings();\n            this.applySettings();\n            \n            return true;\n        } catch (error) {\n            console.error('Error importing settings:', error);\n            return false;\n        }\n    }\n\n    // Create a new profile with the current settings\n    public createProfile(profileName: string): boolean {\n        if (!profileName || profileName.trim() === '') {\n            return false;\n        }\n        \n        // Normalize the name\n        profileName = profileName.trim();\n        \n        // Check if profile already exists\n        const existingProfile = this.settingsProfiles.find(p => p.name === profileName);\n        if (existingProfile) {\n            return false;\n        }\n        \n        // Create new profile with current settings\n        this.settingsProfiles.push({\n            name: profileName,\n            settings: JSON.parse(JSON.stringify(this.settings)) // Deep copy\n        });\n        \n        // Set as current profile\n        this.currentProfileName = profileName;\n        \n        // Save to localStorage\n        this.saveProfiles();\n        \n        // Update UI elements\n        this.settingsUI.updateUI();\n        \n        // Dispatch a custom event that the UI can listen for\n        const event = new CustomEvent('profileCreated', { \n            detail: { profileName: profileName } \n        });\n        window.dispatchEvent(event);\n        \n        return true;\n    }\n\n    // Delete a profile\n    public deleteProfile(profileName: string): boolean {\n        if (profileName === \"Default\") {\n            return false; // Cannot delete Default profile\n        }\n        \n        const profileIndex = this.settingsProfiles.findIndex(p => p.name === profileName);\n        if (profileIndex < 0) {\n            return false;\n        }\n        \n        // Store current terminal content if we're deleting the active profile\n        const wasActiveProfile = this.currentProfileName === profileName;\n        const terminalContent = wasActiveProfile ? this.captureTerminalContent() : null;\n        \n        // Remove the profile\n        this.settingsProfiles.splice(profileIndex, 1);\n        \n        // If we deleted the current profile, switch to Default\n        if (wasActiveProfile) {\n            this.currentProfileName = \"Default\";\n            const defaultProfile = this.settingsProfiles.find(p => p.name === \"Default\");\n            if (defaultProfile) {\n                this.settings = Object.assign(new AppSettings(), defaultProfile.settings);\n            }\n        }\n        \n        // Save changes\n        this.saveProfiles();\n        \n        // Apply settings change only if we switched profiles\n        if (wasActiveProfile) {\n            this.applySettings();\n        }\n        \n        // Update UI elements\n        this.settingsUI.updateUI();\n        \n        // Dispatch a custom event that the UI can listen for\n        const event = new CustomEvent('profileDeleted', { \n            detail: { profileName: profileName } \n        });\n        window.dispatchEvent(event);\n        \n        return true;\n    }\n\n    // Switch to a different profile\n    public switchProfile(profileName: string): boolean {\n        const profile = this.settingsProfiles.find(p => p.name === profileName);\n        if (!profile) {\n            return false;\n        }\n        \n        // Update current profile name\n        this.currentProfileName = profileName;\n        \n        // Load settings from the profile\n        this.settings = Object.assign(new AppSettings(), profile.settings);\n        \n        // Save current profile selection\n        localStorage.setItem('mudClientCurrentProfile', this.currentProfileName);\n        \n        // Apply the settings\n        this.applySettings();\n        \n        return true;\n    }\n\n    // Get the list of profile names\n    public getProfileNames(): string[] {\n        return this.settingsProfiles.map(p => p.name);\n    }\n\n    // Get the current profile name\n    public getCurrentProfileName(): string {\n        return this.currentProfileName;\n    }\n\n    // Public APIs for UI interaction\n    /**\n     * Writes text to the terminal output without sending to the MUD\n     * @param text The text to display\n     */\n    public echo(text: string): void {\n        this.appendToOutput(text);\n    }\n    \n    // Set a variable\n    public setVariable(name: string, value: any, type: string = 'string'): void {\n        if (!name) {\n            console.error('Variable name cannot be empty');\n            return;\n        }\n        \n        const varName = name.toUpperCase();\n        let varValue = String(value);\n        \n        // Find existing variable or create a new one\n        const existingVarIndex = this.settings.Variables.findIndex(v => v.name === varName);\n        \n        if (existingVarIndex >= 0) {\n            // Update existing variable\n            this.settings.Variables[existingVarIndex].value = varValue;\n            this.settings.Variables[existingVarIndex].type = type;\n        } else {\n            // Create new variable\n            this.settings.Variables.push({\n                name: varName,\n                value: varValue,\n                type: type\n            });\n        }\n        \n        // Save settings\n        this.saveSettings();\n    }\n\n    // Get a variable value\n    public getVariable(name: string): string | null {\n        const varName = name.toUpperCase();\n        const variable = this.settings.Variables.find(v => v.name === varName);\n        return variable ? variable.value : null;\n    }\n\n    // Create a timer\n    public createTimer(callback: () => void, delay: number): number {\n        return window.setTimeout(callback, delay);\n    }\n\n    // Create an interval\n    public createInterval(callback: () => void, interval: number): number {\n        return window.setInterval(callback, interval);\n    }\n\n    // Cancel a timer\n    public cancelTimer(id: number): void {\n        window.clearTimeout(id);\n    }\n\n    // Cancel an interval\n    public cancelInterval(id: number): void {\n        window.clearInterval(id);\n    }\n\n    // Create a trigger\n    public createTrigger(pattern: string, actions: string, type: string = 'regex', actionType: string = 'text'): void {\n        if (!pattern || !actions) {\n            console.error('Pattern and actions are required');\n            return;\n        }\n        \n        this.settings.Triggers.push({\n            match: pattern,\n            actions: actions,\n            type: type,\n            actionType: actionType\n        });\n        \n        this.saveSettings();\n    }\n\n    // UI state tracking\n    private modalOpen: boolean = false;\n    private interactingWithDropdown: boolean = false;\n\n    // UI State methods\n    public isModalOpen(): boolean {\n        return this.modalOpen;\n    }\n\n    public setModalOpen(isOpen: boolean): void {\n        this.modalOpen = isOpen;\n    }\n\n    public isInteractingWithDropdown(): boolean {\n        return this.interactingWithDropdown;\n    }\n\n    public setInteractingWithDropdown(isInteracting: boolean): void {\n        this.interactingWithDropdown = isInteracting;\n    }\n\n    public sendMudCommand(command: string): void {\n        this.sendCommand(command);\n    }\n\n    \n}", "import { App } from './app';\n\nexport class AliasesUI {\n    private app: App;\n    private aliasesList: HTMLElement | null = null;\n    private editFormContainer: HTMLElement | null = null;\n    private addAliasBtn: HTMLElement | null = null;\n    \n    constructor(app: App) {\n        this.app = app;\n        this.initializeUIElements();\n        this.initializeEventListeners();\n    }\n    \n    private initializeUIElements(): void {\n        this.aliasesList = document.getElementById('aliases-list');\n        this.editFormContainer = document.getElementById('alias-edit-form-container');\n        this.addAliasBtn = document.getElementById('add-alias');\n    }\n    \n    private initializeEventListeners(): void {\n        if (this.addAliasBtn) {\n            this.addAliasBtn.addEventListener('click', () => {\n                this.showEditForm(null, -1);\n            });\n        }\n    }\n    \n    // Load aliases from app settings into the UI\n    public loadAliases(): void {\n        if (!this.aliasesList || !this.app.settings.Aliases) {\n            return;\n        }\n        \n        // Clear existing list\n        this.aliasesList.innerHTML = '';\n        \n        // Clear edit form container\n        if (this.editFormContainer) {\n            this.editFormContainer.innerHTML = '';\n            this.editFormContainer.classList.remove('active');\n        }\n        \n        // Add each alias to the list\n        this.app.settings.Aliases.forEach((alias, index) => {\n            if(this.aliasesList === null)\n                return;\n            const row = document.createElement('tr');\n            row.dataset.index = index.toString();\n            \n            const aliasCell = document.createElement('td');\n            aliasCell.textContent = alias.alias;\n            row.appendChild(aliasCell);\n            \n            const commandCell = document.createElement('td');\n            commandCell.textContent = alias.command;\n            row.appendChild(commandCell);\n            \n            const actionCell = document.createElement('td');\n            \n            // Edit button\n            const editBtn = document.createElement('button');\n            editBtn.className = 'client-button';\n            editBtn.textContent = 'Edit';\n            editBtn.style.marginRight = '5px';\n            editBtn.addEventListener('click', () => {\n                this.showEditForm(alias, index);\n            });\n            \n            // Delete button\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'client-button';\n            deleteBtn.textContent = 'Delete';\n            deleteBtn.addEventListener('click', () => {\n                // Remove the alias\n                this.app.settings.Aliases.splice(index, 1);\n                \n                // Save settings and reload list\n                this.app.saveSettings();\n                this.loadAliases();\n            });\n            \n            actionCell.appendChild(editBtn);\n            actionCell.appendChild(deleteBtn);\n            row.appendChild(actionCell);\n            \n            this.aliasesList.appendChild(row);\n        });\n    }\n    \n    // Show edit form for adding or editing an alias\n    private showEditForm(alias: { alias: string, command: string } | null, index: number): void {\n        if (!this.editFormContainer) return;\n        \n        // Clear previous form content\n        this.editFormContainer.innerHTML = '';\n        \n        // Create the form content\n        const formTitle = document.createElement('h4');\n        formTitle.textContent = index === -1 ? 'Add New Alias' : 'Edit Alias';\n        this.editFormContainer.appendChild(formTitle);\n        \n        // Create alias input row\n        const aliasRow = document.createElement('div');\n        aliasRow.className = 'form-row';\n        \n        const aliasLabel = document.createElement('label');\n        aliasLabel.textContent = 'Alias:';\n        aliasLabel.setAttribute('for', 'edit-alias-input');\n        \n        const aliasInput = document.createElement('input');\n        aliasInput.type = 'text';\n        aliasInput.id = 'edit-alias-input';\n        aliasInput.value = alias ? alias.alias : '';\n        aliasInput.placeholder = 'e.g., n, sw, l';\n        \n        aliasRow.appendChild(aliasLabel);\n        aliasRow.appendChild(aliasInput);\n        this.editFormContainer.appendChild(aliasRow);\n        \n        // Create command input row\n        const cmdRow = document.createElement('div');\n        cmdRow.className = 'form-row';\n        \n        const cmdLabel = document.createElement('label');\n        cmdLabel.textContent = 'Command:';\n        cmdLabel.setAttribute('for', 'edit-alias-cmd-input');\n        \n        const cmdInput = document.createElement('input');\n        cmdInput.type = 'text';\n        cmdInput.id = 'edit-alias-cmd-input';\n        cmdInput.value = alias ? alias.command : '';\n        cmdInput.placeholder = 'e.g., north, southwest, look';\n        \n        cmdRow.appendChild(cmdLabel);\n        cmdRow.appendChild(cmdInput);\n        this.editFormContainer.appendChild(cmdRow);\n        \n        // Add a hint about aliases\n        const hintText = document.createElement('div');\n        hintText.innerHTML = '<small>Tip: Aliases let you type a shorter command that expands to a longer one. For example, use \"n\" for \"north\".</small>';\n        hintText.style.marginTop = '5px';\n        hintText.style.color = '#999';\n        this.editFormContainer.appendChild(hintText);\n        \n        // Create button row\n        const buttonRow = document.createElement('div');\n        buttonRow.className = 'button-row';\n        \n        // Save button\n        const saveBtn = document.createElement('button');\nsaveBtn.className = 'client-button';\n        saveBtn.textContent = 'Save';\n        saveBtn.addEventListener('click', () => {\n            if (index === -1) {\n                // Adding new alias\n                this.app.settings.Aliases.push({\n                    alias: aliasInput.value,\n                    command: cmdInput.value\n                });\n            } else {\n                // Updating existing alias\n                if (alias) {\n                    alias.alias = aliasInput.value;\n                    alias.command = cmdInput.value;\n                }\n            }\n            \n            // Save settings and reload\n            this.app.saveSettings();\n            this.loadAliases();\n        });\n        \n        // Cancel button\n        const cancelBtn = document.createElement('button');\ncancelBtn.className = 'client-button';\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.style.backgroundColor = '#555';\n        cancelBtn.addEventListener('click', () => {\n            this.editFormContainer!.innerHTML = '';\n            this.editFormContainer!.classList.remove('active');\n        });\n        \n        buttonRow.appendChild(saveBtn);\n        buttonRow.appendChild(cancelBtn);\n        this.editFormContainer.appendChild(buttonRow);\n        \n        // Show the form container\n        this.editFormContainer.classList.add('active');\n    }\n    \n    // Update UI elements\n    public updateUI(): void {\n        this.loadAliases();\n    }\n}", "import { App } from './app';\n\nexport class TriggersUI {\n    private app: App;\n    private triggersList: HTMLElement | null = null;\n    private editFormContainer: HTMLElement | null = null;\n    private addTriggerBtn: HTMLElement | null = null;\n    \n    constructor(app: App) {\n        this.app = app;\n        this.initializeUIElements();\n        this.initializeEventListeners();\n    }\n    \n    private initializeUIElements(): void {\n        this.triggersList = document.getElementById('triggers-list');\n        this.editFormContainer = document.getElementById('trigger-edit-form-container');\n        this.addTriggerBtn = document.getElementById('add-trigger');\n    }\n    \n    private initializeEventListeners(): void {\n        if (this.addTriggerBtn) {\n            this.addTriggerBtn.addEventListener('click', () => {\n                this.showEditForm(null, -1);\n            });\n        }\n    }\n    \n    // Load triggers from app settings into the UI\n    public loadTriggers(): void {\n        if (!this.triggersList || !this.app.settings.Triggers) {\n            return;\n        }\n        \n        // Clear existing list\n        this.triggersList.innerHTML = '';\n        \n        // Clear edit form container\n        if (this.editFormContainer) {\n            this.editFormContainer.innerHTML = '';\n            this.editFormContainer.classList.remove('active');\n        }\n        \n        // Add each trigger to the list\n        this.app.settings.Triggers.forEach((trigger, index) => {\n            if(this.triggersList === null)\n                return;\n            const row = document.createElement('tr');\n            row.dataset.index = index.toString();\n            \n            const patternCell = document.createElement('td');\n            patternCell.textContent = trigger.match;\n            row.appendChild(patternCell);\n            \n            const typeCell = document.createElement('td');\n            typeCell.textContent = trigger.type || 'regex';\n            row.appendChild(typeCell);\n            \n            const actionTypeCell = document.createElement('td');\n            actionTypeCell.textContent = trigger.actionType || 'text';\n            row.appendChild(actionTypeCell);\n            \n            const actionCell = document.createElement('td');\n            actionCell.textContent = trigger.actions;\n            row.appendChild(actionCell);\n            \n            const controlsCell = document.createElement('td');\n            \n            // Edit button\n            const editBtn = document.createElement('button');\n            editBtn.className = 'client-button';\n            editBtn.textContent = 'Edit';\n            editBtn.style.marginRight = '5px';\n            editBtn.addEventListener('click', () => {\n                this.showEditForm(trigger, index);\n            });\n            \n            // Delete button\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'client-button';\n            deleteBtn.textContent = 'Delete';\n            deleteBtn.addEventListener('click', () => {\n                // Remove the trigger\n                this.app.settings.Triggers.splice(index, 1);\n                \n                // Save settings and reload list\n                this.app.saveSettings();\n                this.loadTriggers();\n            });\n            \n            controlsCell.appendChild(editBtn);\n            controlsCell.appendChild(deleteBtn);\n            row.appendChild(controlsCell);\n            \n            this.triggersList.appendChild(row);\n        });\n    }\n    \n    // Show edit form for adding or editing a trigger\n    private showEditForm(trigger: { match: string, type: string, actions: string, actionType: string } | null, index: number): void {\n        if (!this.editFormContainer) return;\n        \n        // Clear previous form content\n        this.editFormContainer.innerHTML = '';\n        \n        // Create the form content\n        const formTitle = document.createElement('h4');\n        formTitle.textContent = index === -1 ? 'Add New Trigger' : 'Edit Trigger';\n        this.editFormContainer.appendChild(formTitle);\n        \n        // Create pattern input row\n        const patternRow = document.createElement('div');\n        patternRow.className = 'form-row';\n        \n        const patternLabel = document.createElement('label');\n        patternLabel.textContent = 'Pattern:';\n        patternLabel.setAttribute('for', 'edit-trigger-pattern');\n        \n        const patternInput = document.createElement('input');\n        patternInput.type = 'text';\n        patternInput.id = 'edit-trigger-pattern';\n        patternInput.value = trigger ? trigger.match : '';\n        patternInput.placeholder = 'e.g., ^You are hungry\\\\.$';\n        \n        patternRow.appendChild(patternLabel);\n        patternRow.appendChild(patternInput);\n        this.editFormContainer.appendChild(patternRow);\n        \n        // Create match type select row\n        const typeRow = document.createElement('div');\n        typeRow.className = 'form-row';\n        \n        const typeLabel = document.createElement('label');\n        typeLabel.textContent = 'Match Type:';\n        typeLabel.setAttribute('for', 'edit-trigger-type');\n        \n        const typeSelect = document.createElement('select');\n        typeSelect.id = 'edit-trigger-type';\n        \n        const typeOptions = ['regex', 'substring', 'exact'];\n        typeOptions.forEach(option => {\n            const optEl = document.createElement('option');\n            optEl.value = option;\n            optEl.textContent = option.charAt(0).toUpperCase() + option.slice(1);\n            if (trigger && trigger.type === option) {\n                optEl.selected = true;\n            } else if (!trigger && option === 'regex') {\n                // Default to regex for new triggers\n                optEl.selected = true;\n            }\n            typeSelect.appendChild(optEl);\n        });\n        \n        typeRow.appendChild(typeLabel);\n        typeRow.appendChild(typeSelect);\n        this.editFormContainer.appendChild(typeRow);\n        \n        // Create action type select row\n        const actionTypeRow = document.createElement('div');\n        actionTypeRow.className = 'form-row';\n        \n        const actionTypeLabel = document.createElement('label');\n        actionTypeLabel.textContent = 'Action Type:';\n        actionTypeLabel.setAttribute('for', 'edit-trigger-action-type');\n        \n        const actionTypeSelect = document.createElement('select');\n        actionTypeSelect.id = 'edit-trigger-action-type';\n        \n        const actionTypeOptions = ['text', 'javascript'];\n        actionTypeOptions.forEach(option => {\n            const optEl = document.createElement('option');\n            optEl.value = option;\n            optEl.textContent = option.charAt(0).toUpperCase() + option.slice(1);\n            if (trigger && trigger.actionType === option) {\n                optEl.selected = true;\n            } else if (!trigger && option === 'text') {\n                // Default to text for new triggers\n                optEl.selected = true;\n            }\n            actionTypeSelect.appendChild(optEl);\n        });\n        \n        actionTypeRow.appendChild(actionTypeLabel);\n        actionTypeRow.appendChild(actionTypeSelect);\n        this.editFormContainer.appendChild(actionTypeRow);\n        \n        // Create actions textarea row\n        const actionsRow = document.createElement('div');\n        actionsRow.className = 'form-row';\n        \n        const actionsLabel = document.createElement('label');\n        actionsLabel.textContent = 'Actions:';\n        actionsLabel.setAttribute('for', 'edit-trigger-actions');\n        \n        const actionsInput = document.createElement('textarea');\n        actionsInput.id = 'edit-trigger-actions';\n        actionsInput.value = trigger ? trigger.actions : '';\n        actionsInput.placeholder = 'Enter commands or JavaScript code';\n        \n        // Change the placeholder based on the selected action type\n        actionTypeSelect.addEventListener('change', () => {\n            if (actionTypeSelect.value === 'text') {\n                actionsInput.placeholder = 'Enter commands to execute when triggered';\n            } else {\n                actionsInput.placeholder = 'Enter JavaScript code to execute when triggered';\n            }\n        });\n        \n        actionsRow.appendChild(actionsLabel);\n        actionsRow.appendChild(actionsInput);\n        this.editFormContainer.appendChild(actionsRow);\n        \n        // Add a hint about triggers and action types\n        const hintText = document.createElement('div');\n        hintText.innerHTML = '<small>Tip: Triggers automatically execute actions when matching text appears in the MUD output.<br>' + \n            'Text actions are sent to the MUD as commands.<br>' +\n            'JavaScript actions are executed in the browser and can use <code>window.mudApp</code> to interact with the client.</small>';\n        hintText.style.marginTop = '5px';\n        hintText.style.color = '#999';\n        this.editFormContainer.appendChild(hintText);\n        \n        // Add pattern test section\n        const testContainer = document.createElement('div');\n        testContainer.className = 'pattern-test-container';\n        \n        const testTitle = document.createElement('h4');\n        testTitle.textContent = 'Test Pattern';\n        testContainer.appendChild(testTitle);\n        \n        const testInputRow = document.createElement('div');\n        testInputRow.className = 'form-row';\n        \n        const testInputLabel = document.createElement('label');\n        testInputLabel.textContent = 'Test Text:';\n        testInputLabel.setAttribute('for', 'pattern-test-input');\n        \n        const testInput = document.createElement('textarea');\n        testInput.id = 'pattern-test-input';\n        testInput.placeholder = 'Enter text to test against the pattern';\n        testInput.rows = 4; // Set an initial height of 4 rows\n        testInput.style.width = 'calc(100% - 110px)';\n        testInput.style.maxWidth = '400px';\n        \n        testInputRow.appendChild(testInputLabel);\n        testInputRow.appendChild(testInput);\n        testContainer.appendChild(testInputRow);\n        \n        const testButton = document.createElement('button');\n        testButton.className = 'client-button';\n        testButton.textContent = 'Test Pattern';\n        testButton.addEventListener('click', () => {\n            // Get the current pattern and type\n            const pattern = patternInput.value;\n            const type = typeSelect.value;\n            const testText = testInput.value;\n            \n            if (!pattern || !testText) {\n                return;\n            }\n            \n            let isMatch = false;\n            \n            try {\n                isMatch = this.app.matchTrigger(testText, type, pattern);\n                \n                // Get or create result element\n                let resultElement = document.getElementById('pattern-test-result');\n                if (!resultElement) {\n                    resultElement = document.createElement('div');\n                    resultElement.id = 'pattern-test-result';\n                    resultElement.className = 'pattern-test-result';\n                    testContainer.appendChild(resultElement);\n                }\n                \n                // Update result\n                if (isMatch) {\n                    resultElement.textContent = 'Match found! The trigger would activate.';\n                    resultElement.className = 'pattern-test-result success';\n                } else {\n                    resultElement.textContent = 'No match. The trigger would not activate.';\n                    resultElement.className = 'pattern-test-result failure';\n                }\n            } catch (error) {\n                // Handle regex errors\n                let resultElement = document.getElementById('pattern-test-result');\n                if (!resultElement) {\n                    resultElement = document.createElement('div');\n                    resultElement.id = 'pattern-test-result';\n                    resultElement.className = 'pattern-test-result';\n                    testContainer.appendChild(resultElement);\n                }\n                resultElement.textContent = `Error: ${error instanceof Error ? error.message : 'Unknown error'}`;\n                resultElement.className = 'pattern-test-result failure';\n            }\n        });\n        \n        testContainer.appendChild(testButton);\n        this.editFormContainer.appendChild(testContainer);\n        \n        // Create button row\n        const buttonRow = document.createElement('div');\n        buttonRow.className = 'button-row';\n        buttonRow.style.marginTop = '20px';\n        \n        // Save button\n        const saveBtn = document.createElement('button');\n        saveBtn.className = 'client-button';\n        saveBtn.textContent = 'Save';\n        saveBtn.addEventListener('click', () => {\n            if (index === -1) {\n                // Adding new trigger\n                this.app.settings.Triggers.push({\n                    match: patternInput.value,\n                    type: typeSelect.value,\n                    actions: actionsInput.value,\n                    actionType: actionTypeSelect.value\n                });\n            } else {\n                // Updating existing trigger\n                if (trigger) {\n                    trigger.match = patternInput.value;\n                    trigger.type = typeSelect.value;\n                    trigger.actions = actionsInput.value;\n                    trigger.actionType = actionTypeSelect.value;\n                }\n            }\n            \n            // Save settings and reload\n            this.app.saveSettings();\n            this.loadTriggers();\n        });\n        \n        // Cancel button\n        const cancelBtn = document.createElement('button');\n        cancelBtn.className = 'client-button';\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.style.backgroundColor = '#555';\n        cancelBtn.addEventListener('click', () => {\n            if (this.editFormContainer) {\n                this.editFormContainer.innerHTML = '';\n                this.editFormContainer.classList.remove('active');\n            }\n        });\n        \n        buttonRow.appendChild(saveBtn);\n        buttonRow.appendChild(cancelBtn);\n        this.editFormContainer.appendChild(buttonRow);\n        \n        // Show the form container\n        this.editFormContainer.classList.add('active');\n        \n        // Set initial placeholder based on current action type\n        if (trigger && trigger.actionType === 'javascript') {\n            actionsInput.placeholder = 'Enter JavaScript code to execute when triggered';\n        }\n    }\n    \n    // Update UI elements\n    public updateUI(): void {\n        this.loadTriggers();\n    }\n}", "import { App } from './app';\n\nexport class KeyBindingsUI {\n    private app: App;\n    private keysList: HTMLElement | null = null;\n    private editFormContainer: HTMLElement | null = null;\n    private addKeyBtn: HTMLElement | null = null;\n    \n    constructor(app: App) {\n        this.app = app;\n        this.initializeUIElements();\n        this.initializeEventListeners();\n    }\n    \n    private initializeUIElements(): void {\n        this.keysList = document.getElementById('keys-list');\n        this.editFormContainer = document.getElementById('edit-form-container');\n        this.addKeyBtn = document.getElementById('add-key');\n    }\n    \n    private initializeEventListeners(): void {\n        if (this.addKeyBtn) {\n            this.addKeyBtn.addEventListener('click', () => {\n                this.showEditForm(null, -1);\n            });\n        }\n    }\n    \n    // Load key bindings from app settings into the UI\n    public loadKeyBindings(): void {\n        if (!this.keysList || !this.app.settings.Keybindings) {\n            return;\n        }\n        \n        // Clear existing list\n        this.keysList.innerHTML = '';\n        \n        // Clear edit form container\n        if (this.editFormContainer) {\n            this.editFormContainer.innerHTML = '';\n            this.editFormContainer.classList.remove('active');\n        }\n        \n        // Add each key binding to the list\n        this.app.settings.Keybindings.forEach((binding, index) => {\n            if(this.keysList === null)\n                return;\n            const row = document.createElement('tr');\n            row.dataset.index = index.toString();\n            \n            const keyCell = document.createElement('td');\n            keyCell.textContent = binding.key;\n            row.appendChild(keyCell);\n            \n            const commandCell = document.createElement('td');\n            commandCell.textContent = binding.commands;\n            row.appendChild(commandCell);\n            \n            const actionCell = document.createElement('td');\n            \n            // Edit button\n            const editBtn = document.createElement('button');\n            editBtn.className = 'client-button';\n            editBtn.textContent = 'Edit';\n            editBtn.style.marginRight = '5px';\n            editBtn.addEventListener('click', () => {\n                this.showEditForm(binding, index);\n            });\n            \n            // Delete button\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'client-button';\n            deleteBtn.textContent = 'Delete';\n            deleteBtn.addEventListener('click', () => {\n                // Remove the binding\n                this.app.settings.Keybindings.splice(index, 1);\n                \n                // Save settings and reload list\n                this.app.saveSettings();\n                this.loadKeyBindings();\n            });\n            \n            actionCell.appendChild(editBtn);\n            actionCell.appendChild(deleteBtn);\n            row.appendChild(actionCell);\n            \n            this.keysList.appendChild(row);\n        });\n    }\n    \n    // Show edit form for adding or editing a key binding\n    private showEditForm(binding: { key: string, commands: string } | null, index: number): void {\n        if (!this.editFormContainer) return;\n        \n        // Clear previous form content\n        this.editFormContainer.innerHTML = '';\n        \n        // Create the form content\n        const formTitle = document.createElement('h4');\n        formTitle.textContent = index === -1 ? 'Add New Key Binding' : 'Edit Key Binding';\n        this.editFormContainer.appendChild(formTitle);\n        \n        // Create key input row\n        const keyRow = document.createElement('div');\n        keyRow.className = 'form-row';\n        \n        const keyLabel = document.createElement('label');\n        keyLabel.textContent = 'Key:';\n        keyLabel.setAttribute('for', 'edit-key-input');\n        \n        const keyInput = document.createElement('input');\n        keyInput.type = 'text';\n        keyInput.id = 'edit-key-input';\n        keyInput.value = binding ? binding.key : '';\n        keyInput.placeholder = 'e.g., Numpad8, KeyA, ArrowUp';\n        \n        // Capture Key button\n        const captureBtn = document.createElement('button');\n        captureBtn.className = 'client-button';\n        captureBtn.textContent = 'Capture Key';\n        captureBtn.className = 'capture-key-btn';\n        captureBtn.type = 'button';\n        \n        keyRow.appendChild(keyLabel);\n        keyRow.appendChild(keyInput);\n        keyRow.appendChild(captureBtn);\n        this.editFormContainer.appendChild(keyRow);\n        \n        // Create command input row\n        const cmdRow = document.createElement('div');\n        cmdRow.className = 'form-row';\n        \n        const cmdLabel = document.createElement('label');\n        cmdLabel.textContent = 'Command:';\n        cmdLabel.setAttribute('for', 'edit-cmd-input');\n        \n        const cmdInput = document.createElement('input');\n        cmdInput.type = 'text';\n        cmdInput.id = 'edit-cmd-input';\n        cmdInput.value = binding ? binding.commands : '';\n        cmdInput.placeholder = 'e.g., north, look, /disconnect';\n        \n        cmdRow.appendChild(cmdLabel);\n        cmdRow.appendChild(cmdInput);\n        this.editFormContainer.appendChild(cmdRow);\n        \n        // Add a hint about key codes\n        const hintText = document.createElement('div');\n        hintText.innerHTML = '<small>Tip: Press \"Capture Key\" and press any key combination to automatically set the key.</small>';\n        hintText.style.marginTop = '5px';\n        hintText.style.color = '#999';\n        this.editFormContainer.appendChild(hintText);\n        \n        // Create button row\n        const buttonRow = document.createElement('div');\n        buttonRow.className = 'button-row';\n        \n        // Save button\n        const saveBtn = document.createElement('button');\n        saveBtn.className = 'client-button';\n        saveBtn.textContent = 'Save';\n        saveBtn.addEventListener('click', () => {\n            if (index === -1) {\n                // Adding new binding\n                this.app.settings.Keybindings.push({\n                    key: keyInput.value,\n                    commands: cmdInput.value\n                });\n            } else {\n                // Updating existing binding\n                if (binding) {\n                    binding.key = keyInput.value;\n                    binding.commands = cmdInput.value;\n                }\n            }\n            \n            // Save settings and reload\n            this.app.saveSettings();\n            this.loadKeyBindings();\n        });\n        \n        // Cancel button\n        const cancelBtn = document.createElement('button');\n        cancelBtn.className = 'client-button';\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.style.backgroundColor = '#555';\n        cancelBtn.addEventListener('click', () => {\n            if (this.editFormContainer) {\n                this.editFormContainer.innerHTML = '';\n                this.editFormContainer.classList.remove('active');\n            }\n        });\n        \n        buttonRow.appendChild(saveBtn);\n        buttonRow.appendChild(cancelBtn);\n        this.editFormContainer.appendChild(buttonRow);\n        \n        // Show the form container\n        this.editFormContainer.classList.add('active');\n        \n        // Add key capture functionality\n        captureBtn.addEventListener('click', () => {\n            // Create and show the key capture dialog\n            this.showKeyCaptureDialog(keyInput);\n        });\n    }\n    \n    // Function to show the key capture dialog\n    private showKeyCaptureDialog(targetInput: HTMLInputElement): void {\n        // Create overlay for the dialog\n        const dialogOverlay = document.createElement('div');\n        dialogOverlay.className = 'key-capture-overlay';\n        \n        // Create dialog container\n        const dialogContainer = document.createElement('div');\n        dialogContainer.className = 'key-capture-dialog';\n        \n        // Create dialog content\n        const dialogContent = document.createElement('div');\n        dialogContent.className = 'key-capture-content';\n        \n        // Add heading\n        const heading = document.createElement('h3');\n        heading.textContent = 'Waiting for key...';\n        \n        // Add instructions\n        const instructions = document.createElement('p');\n        instructions.textContent = 'Press any key or key combination to capture it.';\n        \n        // Add key display area\n        const keyDisplay = document.createElement('div');\n        keyDisplay.className = 'key-display';\n        keyDisplay.textContent = 'Press a key';\n        \n        // Add cancel button\n        const cancelBtn = document.createElement('button');\n        cancelBtn.className = 'client-button';\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.addEventListener('click', () => {\n            document.body.removeChild(dialogOverlay);\n            document.removeEventListener('keydown', keyHandler);\n        });\n        \n        // Assemble dialog\n        dialogContent.appendChild(heading);\n        dialogContent.appendChild(instructions);\n        dialogContent.appendChild(keyDisplay);\n        dialogContent.appendChild(cancelBtn);\n        dialogContainer.appendChild(dialogContent);\n        dialogOverlay.appendChild(dialogContainer);\n        \n        // Add to document\n        document.body.appendChild(dialogOverlay);\n        \n        // Focus the dialog to capture keypresses\n        dialogContainer.focus();\n        \n        // Key handler function\n        const keyHandler = (e: KeyboardEvent) => {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            // Check if this is only a modifier key press\n            if (e.key === 'Control' || e.key === 'Alt' || e.key === 'Shift' || \n                e.key === 'Meta' || e.code === 'ControlLeft' || e.code === 'ControlRight' || \n                e.code === 'AltLeft' || e.code === 'AltRight' || \n                e.code === 'ShiftLeft' || e.code === 'ShiftRight') {\n                \n                // Update display to show we're waiting for a non-modifier key\n                keyDisplay.textContent = 'Waiting for a non-modifier key...';\n                \n                // Don't close the dialog, keep waiting for a non-modifier key\n                return;\n            }\n            \n            // Build key string with modifiers\n            let keyString = '';\n            \n            if (e.ctrlKey) {\n                keyString += 'Ctrl+';\n            }\n            \n            if (e.altKey) {\n                keyString += 'Alt+';\n            }\n            \n            if (e.shiftKey) {\n                keyString += 'Shift+';\n            }\n            \n            // Add the main key code\n            keyString += e.code;\n            \n            // Update display\n            keyDisplay.textContent = keyString;\n            \n            // Set the value in the target input\n            targetInput.value = keyString;\n            \n            // Close dialog after a short delay\n            setTimeout(() => {\n                document.body.removeChild(dialogOverlay);\n                document.removeEventListener('keydown', keyHandler);\n            }, 500);\n        };\n        \n        // Add key event listener\n        document.addEventListener('keydown', keyHandler);\n    }\n    \n    // Update UI elements\n    public updateUI(): void {\n        this.loadKeyBindings();\n    }\n}", "import { App } from './app';\n\nexport class VariablesUI {\n    private app: App;\n    private variablesList: HTMLElement | null = null;\n    private editFormContainer: HTMLElement | null = null;\n    private addVariableBtn: HTMLElement | null = null;\n    \n    constructor(app: App) {\n        this.app = app;\n        this.initializeUIElements();\n        this.initializeEventListeners();\n    }\n    \n    private initializeUIElements(): void {\n        this.variablesList = document.getElementById('variables-list');\n        this.editFormContainer = document.getElementById('variable-edit-form-container');\n        this.addVariableBtn = document.getElementById('add-variable');\n    }\n    \n    private initializeEventListeners(): void {\n        if (this.addVariableBtn) {\n            this.addVariableBtn.addEventListener('click', () => {\n                this.showEditForm(null, -1);\n            });\n        }\n    }\n    \n    // Load variables from app settings into the UI\n    public loadVariables(): void {\n        if (!this.variablesList || !this.app.settings.Variables) {\n            return;\n        }\n        \n        // Clear existing list\n        this.variablesList.innerHTML = '';\n        \n        // Clear edit form container\n        if (this.editFormContainer) {\n            this.editFormContainer.innerHTML = '';\n            this.editFormContainer.classList.remove('active');\n        }\n        \n        // Add each variable to the list\n        this.app.settings.Variables.forEach((variable, index) => {\n            if(this.variablesList === null)\n                return;\n            const row = document.createElement('tr');\n            row.dataset.index = index.toString();\n            \n            const nameCell = document.createElement('td');\n            nameCell.textContent = variable.name;\n            row.appendChild(nameCell);\n            \n            const typeCell = document.createElement('td');\n            typeCell.textContent = variable.type || 'string';\n            row.appendChild(typeCell);\n            \n            const valueCell = document.createElement('td');\n            valueCell.textContent = variable.value;\n            row.appendChild(valueCell);\n            \n            const actionCell = document.createElement('td');\n            \n            // Edit button\n            const editBtn = document.createElement('button');\n            editBtn.className = 'client-button';\n            editBtn.textContent = 'Edit';\n            editBtn.style.marginRight = '5px';\n            editBtn.addEventListener('click', () => {\n                this.showEditForm(variable, index);\n            });\n            \n            // Delete button\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'client-button';\n            deleteBtn.textContent = 'Delete';\n            deleteBtn.addEventListener('click', () => {\n                // Remove the variable\n                this.app.settings.Variables.splice(index, 1);\n                \n                // Save settings and reload list\n                this.app.saveSettings();\n                this.loadVariables();\n            });\n            \n            actionCell.appendChild(editBtn);\n            actionCell.appendChild(deleteBtn);\n            row.appendChild(actionCell);\n            \n            this.variablesList.appendChild(row);\n        });\n    }\n    \n    // Show edit form for adding or editing a variable\n    private showEditForm(variable: { name: string, type: string, value: string } | null, index: number): void {\n        if (!this.editFormContainer) return;\n        \n        // Clear previous form content\n        this.editFormContainer.innerHTML = '';\n        \n        // Create the form content\n        const formTitle = document.createElement('h4');\n        formTitle.textContent = index === -1 ? 'Add New Variable' : 'Edit Variable';\n        this.editFormContainer.appendChild(formTitle);\n        \n        // Create name input row\n        const nameRow = document.createElement('div');\n        nameRow.className = 'form-row';\n        \n        const nameLabel = document.createElement('label');\n        nameLabel.textContent = 'Name:';\n        nameLabel.setAttribute('for', 'edit-variable-name');\n        \n        const nameInput = document.createElement('input');\n        nameInput.type = 'text';\n        nameInput.id = 'edit-variable-name';\n        nameInput.value = variable ? variable.name : '';\n        nameInput.placeholder = 'e.g., HP, TARGET, LOCATION';\n        \n        nameRow.appendChild(nameLabel);\n        nameRow.appendChild(nameInput);\n        this.editFormContainer.appendChild(nameRow);\n        \n        // Create type select row\n        const typeRow = document.createElement('div');\n        typeRow.className = 'form-row';\n        \n        const typeLabel = document.createElement('label');\n        typeLabel.textContent = 'Type:';\n        typeLabel.setAttribute('for', 'edit-variable-type');\n        \n        const typeSelect = document.createElement('select');\n        typeSelect.id = 'edit-variable-type';\n        \n        const typeOptions = ['string', 'number', 'boolean'];\n        typeOptions.forEach(option => {\n            const optEl = document.createElement('option');\n            optEl.value = option;\n            optEl.textContent = option.charAt(0).toUpperCase() + option.slice(1);\n            if (variable && variable.type === option) {\n                optEl.selected = true;\n            } else if (!variable && option === 'string') {\n                // Default to string for new variables\n                optEl.selected = true;\n            }\n            typeSelect.appendChild(optEl);\n        });\n        \n        typeRow.appendChild(typeLabel);\n        typeRow.appendChild(typeSelect);\n        this.editFormContainer.appendChild(typeRow);\n        \n        // Create value input row\n        const valueRow = document.createElement('div');\n        valueRow.className = 'form-row';\n        \n        const valueLabel = document.createElement('label');\n        valueLabel.textContent = 'Value:';\n        valueLabel.setAttribute('for', 'edit-variable-value');\n        \n        const valueInput = document.createElement('input');\n        valueInput.type = 'text';\n        valueInput.id = 'edit-variable-value';\n        valueInput.value = variable ? variable.value : '';\n        valueInput.placeholder = 'Enter variable value';\n        \n        valueRow.appendChild(valueLabel);\n        valueRow.appendChild(valueInput);\n        this.editFormContainer.appendChild(valueRow);\n        \n        // Add a hint about variables\n        const hintText = document.createElement('div');\n        hintText.innerHTML = '<small>Tip: Variables can be used in commands with the $VARNAME syntax. For example, \"attack $TARGET\" will be replaced with the value of the TARGET variable.</small>';\n        hintText.style.marginTop = '5px';\n        hintText.style.color = '#999';\n        this.editFormContainer.appendChild(hintText);\n        \n        // Create button row\n        const buttonRow = document.createElement('div');\n        buttonRow.className = 'button-row';\n        buttonRow.style.marginTop = '20px';\n        \n        // Save button\n        const saveBtn = document.createElement('button');\n        saveBtn.className = 'client-button';\n        saveBtn.textContent = 'Save';\n        saveBtn.addEventListener('click', () => {\n            // Validate the variable name (cannot be empty and must be alphanumeric)\n            const name = nameInput.value.trim().toUpperCase();\n            if (!name) {\n                this.app.showNotification('Variable name cannot be empty', false);\n                return;\n            }\n            \n            if (!/^[A-Z0-9_]+$/.test(name)) {\n                this.app.showNotification('Variable name can only contain letters, numbers, and underscores', false);\n                return;\n            }\n            \n            // Check for duplicate names (except when editing the same variable)\n            const duplicateIndex = this.app.settings.Variables.findIndex(v => \n                v.name.toUpperCase() === name && \n                (index === -1 || this.app.settings.Variables.indexOf(v) !== index)\n            );\n            \n            if (duplicateIndex !== -1) {\n                this.app.showNotification(`A variable with the name \"${name}\" already exists`, false);\n                return;\n            }\n            \n            // Format the value based on the type\n            let value = valueInput.value;\n            const type = typeSelect.value;\n            \n            if (type === 'number') {\n                const num = parseFloat(value);\n                if (isNaN(num)) {\n                    this.app.showNotification('Please enter a valid number', false);\n                    return;\n                }\n                value = num.toString();\n            } else if (type === 'boolean') {\n                // Convert various truthy/falsy values to boolean strings\n                value = value.toLowerCase();\n                if (['true', '1', 'yes', 'y', 'on'].includes(value)) {\n                    value = 'true';\n                } else {\n                    value = 'false';\n                }\n            }\n            \n            if (index === -1) {\n                // Adding new variable\n                this.app.settings.Variables.push({\n                    name: name,\n                    type: type,\n                    value: value\n                });\n            } else {\n                // Updating existing variable\n                if (variable) {\n                    variable.name = name;\n                    variable.type = type;\n                    variable.value = value;\n                }\n            }\n            \n            // Save settings and reload\n            this.app.saveSettings();\n            this.loadVariables();\n        });\n        \n        // Cancel button\n        const cancelBtn = document.createElement('button');\n        cancelBtn.className = 'client-button';\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.style.backgroundColor = '#555';\n        cancelBtn.addEventListener('click', () => {\n            if (this.editFormContainer) {\n                this.editFormContainer.innerHTML = '';\n                this.editFormContainer.classList.remove('active');\n            }\n        });\n        \n        buttonRow.appendChild(saveBtn);\n        buttonRow.appendChild(cancelBtn);\n        this.editFormContainer.appendChild(buttonRow);\n        \n        // Show the form container\n        this.editFormContainer.classList.add('active');\n        \n        // Add type-specific input handling\n        typeSelect.addEventListener('change', () => {\n            const selectedType = typeSelect.value;\n            \n            // Update the input type or appearance based on the selected type\n            if (selectedType === 'boolean') {\n                // For boolean, we could provide a simpler interface\n                valueInput.placeholder = 'Enter true or false';\n                \n                // If the current value isn't already boolean-like, set a default\n                const currentVal = valueInput.value.toLowerCase();\n                if (!['true', 'false', '0', '1', 'yes', 'no', 'y', 'n', 'on', 'off'].includes(currentVal)) {\n                    valueInput.value = 'false';\n                }\n            } else if (selectedType === 'number') {\n                valueInput.placeholder = 'Enter a number';\n                valueInput.type = 'number';\n                \n                // Try to convert current value to number\n                const num = parseFloat(valueInput.value);\n                if (isNaN(num)) {\n                    valueInput.value = '0';\n                }\n            } else {\n                // String type\n                valueInput.placeholder = 'Enter variable value';\n                valueInput.type = 'text';\n            }\n        });\n        \n        // Initialize the input based on current type\n        if (variable && variable.type) {\n            const event = new Event('change');\n            typeSelect.dispatchEvent(event);\n        }\n    }\n    \n    // Update UI elements\n    public updateUI(): void {\n        this.loadVariables();\n    }\n}", "import { App } from './app';\n\nexport class ProfilesUI {\n    private app: App;\n    \n    // Profile UI elements\n    private profileSelect: HTMLSelectElement | null = null;\n    private deleteProfileSelect: HTMLSelectElement | null = null;\n    private quickProfileSelect: HTMLSelectElement | null = null;\n    private newProfileNameInput: HTMLInputElement | null = null;\n    private switchProfileBtn: HTMLElement | null = null;\n    private createProfileBtn: HTMLElement | null = null;\n    private deleteProfileBtn: HTMLElement | null = null;\n    \n    // Profile confirmation modal elements\n    private profileConfirmModal: HTMLElement | null = null;\n    private profileConfirmClose: HTMLElement | null = null;\n    private confirmDeleteProfileBtn: HTMLElement | null = null;\n    private cancelDeleteProfileBtn: HTMLElement | null = null;\n    \n    private profileToDelete: string = '';\n    \n    constructor(app: App) {\n        this.app = app;\n        this.initializeUIElements();\n        this.initializeEventListeners();\n    }\n    \n    private initializeUIElements(): void {\n        // Get profile UI elements\n        this.profileSelect = document.getElementById('profile-select') as HTMLSelectElement;\n        this.deleteProfileSelect = document.getElementById('delete-profile-select') as HTMLSelectElement;\n        this.quickProfileSelect = document.getElementById('quick-profile-select') as HTMLSelectElement;\n        this.newProfileNameInput = document.getElementById('new-profile-name') as HTMLInputElement;\n        this.switchProfileBtn = document.getElementById('switch-profile');\n        this.createProfileBtn = document.getElementById('create-profile');\n        this.deleteProfileBtn = document.getElementById('delete-profile');\n        \n        // Get profile confirmation modal elements\n        this.profileConfirmModal = document.getElementById('profile-confirm-modal');\n        this.profileConfirmClose = document.getElementById('profile-confirm-close');\n        this.confirmDeleteProfileBtn = document.getElementById('confirm-delete-profile');\n        this.cancelDeleteProfileBtn = document.getElementById('cancel-delete-profile');\n    }\n    \n    private initializeEventListeners(): void {\n        // Switch profile button\n        if (this.switchProfileBtn && this.profileSelect) {\n            this.switchProfileBtn.addEventListener('click', () => {\n                const selectedProfile = this.profileSelect!.value;\n                if (selectedProfile) {\n                    if (this.app.switchProfile(selectedProfile)) {\n                        // Show notification\n                        this.app.showNotification(`Profile switched to \"${selectedProfile}\"`, true);\n                        \n                        // Refresh ALL profile UI elements\n                        this.updateUI();\n                    }\n                }\n            });\n        }\n        \n        // Create profile button\n        if (this.createProfileBtn && this.newProfileNameInput) {\n            this.createProfileBtn.addEventListener('click', () => {\n                const profileName = this.newProfileNameInput!.value.trim();\n                if (profileName) {\n                    if (this.app.createProfile(profileName)) {\n                        // Show notification\n                        this.app.showNotification(`Profile \"${profileName}\" created and activated`, true);\n                        \n                        // Clear input field\n                        this.newProfileNameInput!.value = '';\n                        \n                        // Refresh ALL profile UI elements\n                        this.updateUI();\n                    } else {\n                        this.app.showNotification(`A profile named \"${profileName}\" already exists`, false);\n                    }\n                } else {\n                    this.app.showNotification('Please enter a profile name', false);\n                }\n            });\n        }\n        \n        // Delete profile button\n        if (this.deleteProfileBtn && this.deleteProfileSelect && this.profileConfirmModal) {\n            this.deleteProfileBtn.addEventListener('click', () => {\n                if (this.deleteProfileSelect!.value) {\n                    this.profileToDelete = this.deleteProfileSelect!.value;\n                    this.profileConfirmModal!.style.display = 'block';\n                    this.app.setModalOpen(true);\n                }\n            });\n        }\n        \n        // Confirmation modal close button\n        if (this.profileConfirmClose && this.profileConfirmModal) {\n            this.profileConfirmClose.addEventListener('click', () => {\n                this.profileConfirmModal!.style.display = 'none';\n                this.profileToDelete = '';\n                this.app.setModalOpen(false);\n            });\n        }\n        \n        // Cancel delete button\n        if (this.cancelDeleteProfileBtn && this.profileConfirmModal) {\n            this.cancelDeleteProfileBtn.addEventListener('click', () => {\n                this.profileConfirmModal!.style.display = 'none';\n                this.profileToDelete = '';\n                this.app.setModalOpen(false);\n            });\n        }\n        \n        // Confirm delete button\n        if (this.confirmDeleteProfileBtn && this.profileConfirmModal) {\n            this.confirmDeleteProfileBtn.addEventListener('click', () => {\n                if (this.profileToDelete) {\n                    if (this.app.deleteProfile(this.profileToDelete)) {\n                        this.app.showNotification(`Profile \"${this.profileToDelete}\" deleted`, true);\n                    } else {\n                        this.app.showNotification(`Cannot delete the Default profile`, false);\n                    }\n                }\n                \n                // Close modal\n                this.profileConfirmModal!.style.display = 'none';\n                this.profileToDelete = '';\n                this.app.setModalOpen(false);\n\n                // Refresh UI\n                this.updateUI();\n            });\n        }\n        \n        // Click outside to close modal\n        if (this.profileConfirmModal) {\n            this.profileConfirmModal.addEventListener('click', (e) => {\n                if (e.target === this.profileConfirmModal) {\n                    if(this.profileConfirmModal === null)\n                        return;\n                    this.profileConfirmModal.style.display = 'none';\n                    this.profileToDelete = '';\n                    this.app.setModalOpen(false);\n                }\n            });\n        }\n        \n        // Quick profile selection\n        if (this.quickProfileSelect) {\n            this.quickProfileSelect.addEventListener('focus', () => {\n                this.app.setInteractingWithDropdown(true);\n            });\n            \n            this.quickProfileSelect.addEventListener('blur', () => {\n                this.app.setInteractingWithDropdown(false);\n            });\n            \n            this.quickProfileSelect.addEventListener('change', () => {\n                const selectedProfile = this.quickProfileSelect!.value;\n                if (selectedProfile) {\n                    if (this.app.switchProfile(selectedProfile)) {\n                        this.app.showNotification(`Profile switched to \"${selectedProfile}\"`, true);\n                        this.updateUI();\n                        \n                        // Focus the input field\n                        const inputField = document.getElementById('input') as HTMLInputElement;\n                        if (inputField) {\n                            inputField.select();\n                        }\n                    }\n                }\n                this.app.setInteractingWithDropdown(false);\n            });\n        }\n\n        if (this.profileSelect) {\n            this.profileSelect.addEventListener('focus', () => {\n                this.app.setInteractingWithDropdown(true);\n            });\n            \n            this.profileSelect.addEventListener('blur', () => {\n                this.app.setInteractingWithDropdown(false);\n            });\n        }\n        \n        if (this.deleteProfileSelect) {\n            this.deleteProfileSelect.addEventListener('focus', () => {\n                this.app.setInteractingWithDropdown(true);\n            });\n            \n            this.deleteProfileSelect.addEventListener('blur', () => {\n                this.app.setInteractingWithDropdown(false);\n            });\n        }\n    }\n    \n    // Update all profile dropdowns\n    public updateUI(): void {\n        this.populateProfileDropdowns();\n        this.updateQuickProfileDropdown();\n    }\n    \n    // Populate the main profile dropdowns\n    private populateProfileDropdowns(): void {\n        if (!this.profileSelect || !this.deleteProfileSelect) return;\n        \n        const profiles = this.app.getProfileNames();\n        const currentProfile = this.app.getCurrentProfileName();\n        \n        // Clear existing options\n        this.profileSelect.innerHTML = '';\n        this.deleteProfileSelect.innerHTML = '';\n        \n        // Add options to main profile select\n        profiles.forEach(profileName => {\n            if(this.profileSelect === null)\n                return;\n            const option = document.createElement('option');\n            option.value = profileName;\n            option.textContent = profileName;\n            if (profileName === currentProfile) {\n                option.selected = true;\n            }\n            this.profileSelect.appendChild(option);\n        });\n        \n        // Add options to delete profile select (excluding Default)\n        profiles.forEach(profileName => {\n            if (profileName !== 'Default') {\n                const option = document.createElement('option');\n                option.value = profileName;\n                option.textContent = profileName;\n                this.deleteProfileSelect!.appendChild(option);\n            }\n        });\n        \n        // Disable delete button if no non-default profiles exist\n        if (profiles.length <= 1 && this.deleteProfileBtn && this.deleteProfileSelect) {\n            (this.deleteProfileBtn as HTMLButtonElement).disabled = true;\n            this.deleteProfileSelect.disabled = true;\n        } else if (this.deleteProfileBtn && this.deleteProfileSelect) {\n            (this.deleteProfileBtn as HTMLButtonElement).disabled = false;\n            this.deleteProfileSelect.disabled = false;\n        }\n    }\n    \n    // Update the quick profile dropdown\n    public updateQuickProfileDropdown(): void {\n        if (!this.quickProfileSelect) return;\n        \n        // Clear existing options\n        this.quickProfileSelect.innerHTML = '';\n        \n        // Get profiles and current profile\n        const profiles = this.app.getProfileNames();\n        const currentProfile = this.app.getCurrentProfileName();\n        \n        // Add options to dropdown\n        profiles.forEach(profileName => {\n            const option = document.createElement('option');\n            option.value = profileName;\n            option.textContent = profileName;\n            if (profileName === currentProfile) {\n                option.selected = true;\n            }\n            this.quickProfileSelect!.appendChild(option);\n        });\n    }\n}", "import { App } from './app';\nimport { AliasesUI } from './AliasesUI';\nimport { TriggersUI } from './TriggersUI';\nimport { KeyBindingsUI } from './KeyBindingsUI';\nimport { VariablesUI } from './VariablesUI';\nimport { ProfilesUI } from './ProfilesUI';\n\nexport class AppSettingsUI {\n    private app: App;\n    private aliasesUI: AliasesUI;\n    private triggersUI: TriggersUI;\n    private keyBindingsUI: KeyBindingsUI;\n    private variablesUI: VariablesUI;\n    private profilesUI: ProfilesUI;\n    \n    private settingsModal: HTMLElement | null = null;\n    private modalTitle: HTMLElement | null = null;\n    private closeBtn: HTMLElement | null = null;\n    private cancelBtn: HTMLElement | null = null;\n    private saveBtn: HTMLElement | null = null;\n    \n    private menuSettings: HTMLElement | null = null;\n    private menuAliases: HTMLElement | null = null;\n    private menuTriggers: HTMLElement | null = null;\n    private menuKeys: HTMLElement | null = null;\n    private menuVariables: HTMLElement | null = null;\n    \n    private sidebarItems: NodeListOf<Element> | null = null;\n    private tabContents: NodeListOf<Element> | null = null;\n    \n    private fontSizeInput: HTMLInputElement | null = null;\n    private bgColorInput: HTMLInputElement | null = null;\n    private textColorInput: HTMLInputElement | null = null;\n    private bgColorValue: HTMLElement | null = null;\n    private textColorValue: HTMLElement | null = null;\n    private resetBtn: HTMLElement | null = null;\n    \n    constructor(app: App) {\n        this.app = app;\n        \n        // Create toolbar and modals\n        this.createToolbar();\n        this.createSettingsModal();\n        this.createImportConfirmModal();\n        this.createProfileConfirmModal();\n        \n        // Initialize sub-UI managers once the DOM elements are created\n        this.aliasesUI = new AliasesUI(app);\n        this.triggersUI = new TriggersUI(app);\n        this.keyBindingsUI = new KeyBindingsUI(app);\n        this.variablesUI = new VariablesUI(app);\n        this.profilesUI = new ProfilesUI(app);\n        \n        // Initialize UI elements and event listeners\n        this.initializeUIElements();\n        this.initializeEventListeners();\n        this.initializeStyles();\n    }\n    \n    private createToolbar(): void {\n        // Create the toolbar that sits above the terminal\n        const toolbar = document.createElement('div');\n        toolbar.className = 'client-menu-bar';\n        toolbar.innerHTML = `\n            <ul style='padding-left: 0;\tlist-style-type: none;'>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"connect-button\">Connect</button>\n            </li>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"disconnect-button\">Disconnect</button>\n            </li>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"menu-settings\">Settings</button>\n            </li>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"menu-aliases\">Aliases</button>\n            </li>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"menu-triggers\">Triggers</button>\n            </li>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"menu-keys\">Keys</button>\n            </li>\n            <li class='client-menu-option'>\n            <button class=\"client-button\" id=\"menu-variables\">Variables</button>\n            </li>\n            <li class='client-menu-option'>\n            <div class=\"profile-dropdown-container\">\n                <select id=\"quick-profile-select\" class=\"profile-dropdown\">\n                    <!-- Profiles will be populated here via JavaScript -->\n                </select>\n            </div>\n            </li>\n            </ul>\n        `;\n        const resizeObserver = new ResizeObserver(entries => {\n              this.app.resize();\n        });\n          \n          // Start observing a flex container or item\n        resizeObserver.observe(toolbar);\n          \n        // Insert toolbar before the terminal element\n        if (this.app.terminalElement && this.app.terminalElement.parentNode) {\n            this.app.terminalElement.parentNode.insertBefore(toolbar, this.app.terminalElement);\n        }\n        this.app.resize();\n    }\n    \n    private createSettingsModal(): void {\n        // Create the settings modal\n        const modal = document.createElement('div');\n        modal.className = 'modal-overlay';\n        modal.id = 'settings-modal';\n        modal.innerHTML = `\n            <div class=\"modal-container\">\n                <div class=\"modal-sidebar\">\n                    <div class=\"sidebar-item active\" data-tab=\"settings\">Settings</div>\n                    <div class=\"sidebar-item\" data-tab=\"aliases\">Aliases</div>\n                    <div class=\"sidebar-item\" data-tab=\"triggers\">Triggers</div>\n                    <div class=\"sidebar-item\" data-tab=\"keys\">Keys</div>\n                    <div class=\"sidebar-item\" data-tab=\"variables\">Variables</div>\n                </div>\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h2 id=\"modal-title\">Settings</h2>\n                        <span class=\"modal-close\">&times;</span>\n                    </div>\n                    \n                    <!-- Settings Tab -->\n                    <div class=\"tab-content active\" id=\"settings-tab\">\n                        <div style=\"margin-top: 20px; display: flex; gap: 10px;\">\n                            <button id=\"export-settings\">Export Settings</button>\n                            <button id=\"import-settings\">Import Settings</button>\n                        </div>\n                        <h3>Settings Profiles</h3>\n                        <div class=\"profile-container\" style=\"margin-bottom: 15px; background-color: #222; padding: 15px; border-radius: 4px; border: 1px solid #444;\">\n                            <div class=\"form-row\" style=\"margin-bottom: 15px; display: flex; align-items: center;\">\n                                <label for=\"profile-select\" style=\"min-width: 120px; color: white;\">Current Profile:</label>\n                                <select id=\"profile-select\" style=\"flex-grow: 1; padding: 8px; background-color: #333; color: white; border: 1px solid #444; border-radius: 4px; margin-right: 10px;\">\n                                    <!-- Profile options will be populated here -->\n                                </select>\n                                <button id=\"switch-profile\" style=\"background-color: #8c1f08;\">Switch</button>\n                            </div>\n                            \n                            <div class=\"form-row\" style=\"margin-bottom: 15px; display: flex; align-items: center;\">\n                                <label for=\"new-profile-name\" style=\"min-width: 120px; color: white;\">New Profile:</label>\n                                <input type=\"text\" id=\"new-profile-name\" style=\"flex-grow: 1; padding: 8px; background-color: #333; color: white; border: 1px solid #444; border-radius: 4px; margin-right: 10px;\" placeholder=\"Enter profile name\">\n                                <button id=\"create-profile\" style=\"background-color: #8c1f08;\">Create</button>\n                            </div>\n                            \n                            <div class=\"form-row\" style=\"display: flex; align-items: center;\">\n                                <label for=\"delete-profile-select\" style=\"min-width: 120px; color: white;\">Delete Profile:</label>\n                                <select id=\"delete-profile-select\" style=\"flex-grow: 1; padding: 8px; background-color: #333; color: white; border: 1px solid #444; border-radius: 4px; margin-right: 10px;\">\n                                    <!-- Profile options will be populated here, excluding Default -->\n                                </select>\n                                <button id=\"delete-profile\" style=\"background-color: #8c1f08;\">Delete</button>\n                            </div>\n                        </div>\n                        <h3>General Settings</h3>\n                        <div style=\"margin-bottom: 15px;\">\n                            <label for=\"font-size\">Font Size:</label>\n                            <input type=\"number\" id=\"font-size\" min=\"8\" max=\"24\" value=\"14\">\n                        </div>\n                        <div style=\"margin-bottom: 15px;\">\n                            <label for=\"bg-color\">Background Color:</label>\n                            <input type=\"color\" id=\"bg-color\" value=\"#000000\">\n                            <span id=\"bg-color-value\">#000000</span>\n                        </div>\n                        <div style=\"margin-bottom: 15px;\">\n                            <label for=\"text-color\">Text Color:</label>\n                            <input type=\"color\" id=\"text-color\" value=\"#FFFFFF\">\n                            <span id=\"text-color-value\">#FFFFFF</span>\n                        </div>\n                        <div style=\"margin-top: 20px;\">\n                            <button id=\"reset-settings\">Reset to Default</button>\n                        </div>\n                    </div>\n                    \n                    <!-- Aliases Tab -->\n                    <div class=\"tab-content\" id=\"aliases-tab\">\n                        <h3>Aliases</h3>\n                        <div>\n                            <div class=\"table-container\">\n                                <table style=\"width: 100%;\">\n                                    <thead>\n                                        <tr>\n                                            <th>Alias</th>\n                                            <th>Command(s)</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"aliases-list\">\n                                        <!-- Aliases will be added here -->\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div id=\"alias-edit-form-container\" class=\"edit-form-container\">\n                                <!-- Edit form will be placed here -->\n                            </div>\n                            <button id=\"add-alias\" class=\"add-btn\">Add Alias</button>\n                        </div>\n                    </div>\n                    \n                    <!-- Triggers Tab -->\n                    <div class=\"tab-content\" id=\"triggers-tab\">\n                        <h3>Triggers</h3>\n                        <div>\n                            <div class=\"table-container\">\n                                <table style=\"width: 100%;\">\n                                    <thead>\n                                        <tr>\n                                            <th>Pattern</th>\n                                            <th>Type</th>\n                                            <th>Action Type</th>\n                                            <th>Actions</th>\n                                            <th>Controls</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"triggers-list\">\n                                        <!-- Triggers will be added here -->\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div id=\"trigger-edit-form-container\" class=\"edit-form-container\">\n                                <!-- Edit form will be placed here -->\n                            </div>\n                            <button id=\"add-trigger\" class=\"add-btn\">Add Trigger</button>\n                        </div>\n                    </div>\n\n                    <!-- Keys Tab -->\n                    <div class=\"tab-content\" id=\"keys-tab\">\n                        <h3>Key Bindings</h3>\n                        <div>\n                            <div class=\"table-container\">\n                                <table style=\"width: 100%;\">\n                                    <thead>\n                                        <tr>\n                                            <th>Key</th>\n                                            <th>Command</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"keys-list\">\n                                        <!-- Key bindings will be added here -->\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div id=\"edit-form-container\" class=\"edit-form-container\">\n                                <!-- Edit form will be placed here -->\n                            </div>\n                            <button id=\"add-key\" class=\"add-btn\">Add Key Binding</button>\n                        </div>\n                    </div>\n\n                    <!-- Variables Tab -->\n                    <div class=\"tab-content\" id=\"variables-tab\">\n                        <h3>Variables</h3>\n                        <div>\n                            <div class=\"table-container\">\n                                <table style=\"width: 100%;\">\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Type</th>\n                                            <th>Value</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody id=\"variables-list\">\n                                        <!-- Variables will be added here -->\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div id=\"variable-edit-form-container\" class=\"edit-form-container\">\n                                <!-- Edit form will be placed here -->\n                            </div>\n                            <button id=\"add-variable\" class=\"add-btn\">Add Variable</button>\n                        </div>\n                    </div>\n                    \n                    <div class=\"modal-footer button-row\">\n                        <button id=\"save-settings\">Save</button>\n                        <button id=\"cancel-settings\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n    }\n    \n    private createImportConfirmModal(): void {\n        const modal = document.createElement('div');\n        modal.className = 'modal-overlay';\n        modal.id = 'import-confirm-modal';\n        modal.style.display = 'none';\n        modal.innerHTML = `\n            <div class=\"modal-container\" style=\"width: 50vw; height: auto;\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h2>Import Settings</h2>\n                        <span class=\"modal-close\" id=\"import-confirm-close\">&times;</span>\n                    </div>\n                    <div style=\"padding: 20px; color: white;\">\n                        <p>Importing settings will replace your current configuration. This includes:</p>\n                        <ul style=\"margin-left: 20px; margin-bottom: 20px;\">\n                            <li>Aliases</li>\n                            <li>Key Bindings</li>\n                            <li>Triggers</li>\n                            <li>Variables</li>\n                            <li>Visual Settings</li>\n                        </ul>\n                        <p>Are you sure you want to continue?</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button id=\"confirm-import\">Yes, Import</button>\n                        <button id=\"cancel-import\" style=\"background-color: #555;\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n        \n        // Create hidden file input for importing settings\n        const fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.id = 'settings-file-input';\n        fileInput.accept = '.json';\n        fileInput.style.display = 'none';\n        document.body.appendChild(fileInput);\n    }\n    \n    private createProfileConfirmModal(): void {\n        const modal = document.createElement('div');\n        modal.className = 'modal-overlay';\n        modal.id = 'profile-confirm-modal';\n        modal.style.display = 'none';\n        modal.innerHTML = `\n            <div class=\"modal-container\" style=\"width: 50vw; height: auto;\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h2>Delete Profile</h2>\n                        <span class=\"modal-close\" id=\"profile-confirm-close\">&times;</span>\n                    </div>\n                    <div style=\"padding: 20px; color: white;\">\n                        <p>Are you sure you want to delete this profile?</p>\n                        <p>This action cannot be undone.</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button id=\"confirm-delete-profile\" style=\"background-color: #dc3545;\">Delete</button>\n                        <button id=\"cancel-delete-profile\" style=\"background-color: #555;\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n    }\n    \n    private initializeUIElements(): void {\n        // Get modal elements\n        this.settingsModal = document.getElementById('settings-modal');\n        this.modalTitle = document.getElementById('modal-title');\n        this.closeBtn = document.querySelector('.modal-close');\n        this.cancelBtn = document.getElementById('cancel-settings');\n        this.saveBtn = document.getElementById('save-settings');\n        \n        // Get menu items\n        this.menuSettings = document.getElementById('menu-settings');\n        this.menuAliases = document.getElementById('menu-aliases');\n        this.menuTriggers = document.getElementById('menu-triggers');\n        this.menuKeys = document.getElementById('menu-keys');\n        this.menuVariables = document.getElementById('menu-variables');\n        \n        // Get sidebar items and tab contents\n        this.sidebarItems = document.querySelectorAll('.sidebar-item');\n        this.tabContents = document.querySelectorAll('.tab-content');\n        \n        // Get settings form elements\n        this.fontSizeInput = document.getElementById('font-size') as HTMLInputElement;\n        this.bgColorInput = document.getElementById('bg-color') as HTMLInputElement;\n        this.textColorInput = document.getElementById('text-color') as HTMLInputElement;\n        this.bgColorValue = document.getElementById('bg-color-value');\n        this.textColorValue = document.getElementById('text-color-value');\n        this.resetBtn = document.getElementById('reset-settings');\n        \n        // Initialize form values\n        this.updateSettingsUI();\n    }\n    \n    private initializeEventListeners(): void {\n        // Modal open/close events\n        if (this.menuSettings) {\n            this.menuSettings.addEventListener('click', () => this.openModal('settings'));\n        }\n        \n        if (this.menuAliases) {\n            this.menuAliases.addEventListener('click', () => this.openModal('aliases'));\n        }\n        \n        if (this.menuTriggers) {\n            this.menuTriggers.addEventListener('click', () => this.openModal('triggers'));\n        }\n        \n        if (this.menuKeys) {\n            this.menuKeys.addEventListener('click', () => this.openModal('keys'));\n        }\n        \n        if (this.menuVariables) {\n            this.menuVariables.addEventListener('click', () => this.openModal('variables'));\n        }\n        \n        // Close modal events\n        if (this.closeBtn) {\n            this.closeBtn.addEventListener('click', () => this.closeModal());\n        }\n        \n        if (this.cancelBtn) {\n            this.cancelBtn.addEventListener('click', () => this.closeModal());\n        }\n        \n        if (this.settingsModal) {\n            this.settingsModal.addEventListener('click', (e) => {\n                if (e.target === this.settingsModal) {\n                    this.closeModal();\n                }\n            });\n        }\n        \n        // Sidebar tab switching\n        if (this.sidebarItems) {\n            this.sidebarItems.forEach(item => {\n                item.addEventListener('click', () => {\n                    const tabName = item.getAttribute('data-tab');\n                    if (tabName) {\n                        this.switchTab(tabName);\n                    }\n                });\n            });\n        }\n        \n        // Settings form events\n        if (this.bgColorInput && this.bgColorValue) {\n            this.bgColorInput.addEventListener('input', () => {\n                if (this.bgColorValue) {\n                    this.bgColorValue.textContent = this.bgColorInput!.value;\n                }\n            });\n        }\n        \n        if (this.textColorInput && this.textColorValue) {\n            this.textColorInput.addEventListener('input', () => {\n                if (this.textColorValue) {\n                    this.textColorValue.textContent = this.textColorInput!.value;\n                }\n            });\n        }\n        \n        // Reset button event\n        if (this.resetBtn) {\n            this.resetBtn.addEventListener('click', () => this.resetSettings());\n        }\n        \n        // Save button event\n        if (this.saveBtn) {\n            this.saveBtn.addEventListener('click', () => this.saveSettings());\n        }\n        \n        // Connect/Disconnect buttons\n        const connectBtn = document.getElementById('connect-button');\n        const disconnectBtn = document.getElementById('disconnect-button');\n        \n        if (connectBtn) {\n            connectBtn.addEventListener('click', () => {\n                this.app.sendCommand(\"/connect\");\n                this.focusInput();\n            });\n        }\n        \n        if (disconnectBtn) {\n            disconnectBtn.addEventListener('click', () => {\n                this.app.sendCommand(\"/disconnect\");\n                this.focusInput();\n            });\n        }\n        \n        // Export/Import settings\n        const exportSettingsBtn = document.getElementById('export-settings');\n        const importSettingsBtn = document.getElementById('import-settings');\n        const settingsFileInput = document.getElementById('settings-file-input') as HTMLInputElement;\n        const importConfirmModal = document.getElementById('import-confirm-modal');\n        const importConfirmClose = document.getElementById('import-confirm-close');\n        const confirmImportBtn = document.getElementById('confirm-import');\n        const cancelImportBtn = document.getElementById('cancel-import');\n        \n        if (exportSettingsBtn) {\n            exportSettingsBtn.addEventListener('click', () => this.exportSettings());\n        }\n        \n        if (importSettingsBtn && settingsFileInput) {\n            importSettingsBtn.addEventListener('click', () => {\n                settingsFileInput.click();\n            });\n            \n            settingsFileInput.addEventListener('change', (event) => {\n                if (settingsFileInput.files && settingsFileInput.files.length > 0 && importConfirmModal) {\n                    importConfirmModal.style.display = 'block';\n                    this.app.setModalOpen(true);\n                }\n            });\n        }\n        \n        if (importConfirmClose && importConfirmModal) {\n            importConfirmClose.addEventListener('click', () => {\n                importConfirmModal.style.display = 'none';\n                if (settingsFileInput) settingsFileInput.value = '';\n                this.app.setModalOpen(false);\n            });\n        }\n        \n        if (cancelImportBtn && importConfirmModal) {\n            cancelImportBtn.addEventListener('click', () => {\n                importConfirmModal.style.display = 'none';\n                if (settingsFileInput) settingsFileInput.value = '';\n                this.app.setModalOpen(false);\n            });\n        }\n        \n        if (confirmImportBtn && importConfirmModal && settingsFileInput) {\n            confirmImportBtn.addEventListener('click', () => {\n                this.importSettings(settingsFileInput.files?.[0]);\n                importConfirmModal.style.display = 'none';\n                this.app.setModalOpen(false);\n            });\n        }\n        \n        if (importConfirmModal) {\n            importConfirmModal.addEventListener('click', (e) => {\n                if (e.target === importConfirmModal) {\n                    importConfirmModal.style.display = 'none';\n                    if (settingsFileInput) settingsFileInput.value = '';\n                    this.app.setModalOpen(false);\n                }\n            });\n        }\n    }\n    \n    private initializeStyles(): void {\n        const style = document.createElement('style');\n        style.textContent = `\n            @keyframes fadeOut {\n                from { opacity: 1; }\n                to { opacity: 0; }\n            }\n            \n            .key-capture-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background-color: rgba(0, 0, 0, 0.7);\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                z-index: 2000;\n            }\n            \n            .key-capture-dialog {\n                background-color: #222;\n                border: 1px solid #444;\n                border-radius: 4px;\n                padding: 20px;\n                width: 400px;\n                max-width: 90%;\n            }\n            \n            .key-capture-content {\n                text-align: center;\n            }\n            \n            .key-display {\n                margin: 20px 0;\n                padding: 10px;\n                background-color: #333;\n                border: 1px solid #555;\n                border-radius: 4px;\n                font-family: monospace;\n                font-size: 18px;\n                color: white;\n            }\n            \n            .pattern-test-container {\n                margin-top: 20px;\n                padding: 15px;\n                background-color: #222;\n                border: 1px solid #444;\n                border-radius: 4px;\n            }\n            \n            .pattern-test-result {\n                margin-top: 10px;\n                padding: 10px;\n                border-radius: 4px;\n            }\n            \n            .pattern-test-result.success {\n                background-color: rgba(40, 167, 69, 0.3);\n                border: 1px solid #28a745;\n            }\n            \n            .pattern-test-result.failure {\n                background-color: rgba(220, 53, 69, 0.3);\n                border: 1px solid #dc3545;\n            }\n        `;\n        document.head.appendChild(style);\n    }\n    \n    private openModal(tabName: string): void {\n        this.app.setModalOpen(true);\n        this.loadSavedSettings();\n        \n        if (this.settingsModal) {\n            this.settingsModal.style.display = 'block';\n        }\n        \n        this.switchTab(tabName);\n        \n        // Update modal title\n        if (this.modalTitle) {\n            this.modalTitle.textContent = tabName.charAt(0).toUpperCase() + tabName.slice(1);\n        }\n    }\n    \n    private closeModal(): void {\n        if (this.settingsModal) {\n            this.settingsModal.style.display = 'none';\n        }\n        this.app.setModalOpen(false);\n        this.focusInput();\n    }\n    \n    private switchTab(tabName: string): void {\n        // Return if elements not found\n        if (!this.sidebarItems || !this.tabContents) return;\n        \n        // Handle special cases for different tabs\n        if (tabName === 'settings') {\n            this.loadSavedSettings();\n        }\n        \n        // Update active sidebar item\n        this.sidebarItems.forEach(item => {\n            item.classList.remove('active');\n            if (item.getAttribute('data-tab') === tabName) {\n                item.classList.add('active');\n            }\n        });\n        \n        // Update active content\n        this.tabContents.forEach(content => {\n            content.classList.remove('active');\n            if (content.id === `${tabName}-tab`) {\n                content.classList.add('active');\n            }\n        });\n        \n        // Update modal title\n        if (this.modalTitle) {\n            this.modalTitle.textContent = tabName.charAt(0).toUpperCase() + tabName.slice(1);\n        }\n        \n        // Load specific tab content\n        switch (tabName) {\n            case 'aliases':\n                this.aliasesUI.loadAliases();\n                break;\n            case 'triggers':\n                this.triggersUI.loadTriggers();\n                break;\n            case 'keys':\n                this.keyBindingsUI.loadKeyBindings();\n                break;\n            case 'variables':\n                this.variablesUI.loadVariables();\n                break;\n        }\n    }\n    \n    private loadSavedSettings(): void {\n        // Make sure UI elements exist\n        if (!this.fontSizeInput || !this.bgColorInput || !this.textColorInput || \n            !this.bgColorValue || !this.textColorValue) {\n            return;\n        }\n        \n        // Update form values from app settings\n        this.fontSizeInput.value = this.app.settings.fontSize.toString();\n        this.bgColorInput.value = this.app.settings.backgroundColor;\n        this.bgColorValue.textContent = this.app.settings.backgroundColor;\n        this.textColorInput.value = this.app.settings.foregroundColor;\n        this.textColorValue.textContent = this.app.settings.foregroundColor;\n        \n        // Update profiles UI\n        this.profilesUI.updateUI();\n        \n        // Update other settings tabs\n        this.aliasesUI.updateUI();\n        this.keyBindingsUI.updateUI();\n        this.triggersUI.updateUI();\n        this.variablesUI.updateUI();\n    }\n    \n    private resetSettings(): void {\n        // Reset form values to defaults\n        if (this.fontSizeInput) this.fontSizeInput.value = '14';\n        if (this.bgColorInput && this.bgColorValue) {\n            this.bgColorInput.value = '#000000';\n            this.bgColorValue.textContent = '#000000';\n        }\n        if (this.textColorInput && this.textColorValue) {\n            this.textColorInput.value = '#FFFFFF';\n            this.textColorValue.textContent = '#FFFFFF';\n        }\n    }\n    \n    private saveSettings(): void {\n        // Update app settings with form values\n        if (this.fontSizeInput) this.app.settings.fontSize = parseInt(this.fontSizeInput.value);\n        if (this.bgColorInput) this.app.settings.backgroundColor = this.bgColorInput.value;\n        if (this.textColorInput) this.app.settings.foregroundColor = this.textColorInput.value;\n        \n        // Save settings\n        this.app.saveSettings();\n        this.app.applySettings();\n        \n        // Close modal\n        this.closeModal();\n    }\n    \n    private exportSettings(): void {\n        // Get settings JSON\n        const settingsJson = this.app.exportSettings();\n        \n        // Create blob and download link\n        const blob = new Blob([settingsJson], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        \n        // Create filename with date\n        const date = new Date();\n        const dateStr = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n        const filename = `mud-settings-${dateStr}.json`;\n        \n        // Create temporary anchor and trigger download\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        \n        // Clean up\n        setTimeout(() => {\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n        }, 100);\n    }\n    \n    private importSettings(file: File | undefined): void {\n        if (!file) {\n            this.app.showNotification('No file selected', false);\n            return;\n        }\n        \n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                if (typeof e.target?.result !== 'string') {\n                    throw new Error('Invalid file format');\n                }\n                \n                const success = this.app.importSettings(e.target.result);\n                \n                if (success) {\n                    this.app.showNotification('Settings imported successfully!', true);\n                    \n                    // Update UI to reflect changes\n                    this.loadSavedSettings();\n                } else {\n                    this.app.showNotification('Error importing settings', false);\n                }\n            } catch (error) {\n                this.app.showNotification(`Error reading file: ${error}`, false);\n            }\n            \n            // Reset file input\n            const fileInput = document.getElementById('settings-file-input') as HTMLInputElement;\n            if (fileInput) fileInput.value = '';\n        };\n        \n        reader.onerror = () => {\n            this.app.showNotification('Error reading file', false);\n            \n            // Reset file input\n            const fileInput = document.getElementById('settings-file-input') as HTMLInputElement;\n            if (fileInput) fileInput.value = '';\n        };\n        \n        reader.readAsText(file);\n    }\n    \n    // Helper method to focus the input field\n    private focusInput(): void {\n        const inputField = document.getElementById('input') as HTMLInputElement;\n        if (inputField) {\n            inputField.select();\n        }\n    }\n    \n    // Public method to update all UI elements\n    public updateSettingsUI(): void {\n        // Make sure UI elements exist\n        if (!this.fontSizeInput || !this.bgColorInput || !this.textColorInput || \n            !this.bgColorValue || !this.textColorValue) {\n            return;\n        }\n        \n        // Update form values from app settings\n        this.fontSizeInput.value = this.app.settings.fontSize.toString();\n        this.bgColorInput.value = this.app.settings.backgroundColor;\n        this.bgColorValue.textContent = this.app.settings.backgroundColor;\n        this.textColorInput.value = this.app.settings.foregroundColor;\n        this.textColorValue.textContent = this.app.settings.foregroundColor;\n        \n        // Update profiles UI\n        this.profilesUI.updateUI();\n    }\n    \n    // Public method for updating all UI components\n    public updateUI(): void {\n        this.updateSettingsUI();\n        this.aliasesUI.updateUI();\n        this.triggersUI.updateUI();\n        this.keyBindingsUI.updateUI();\n        this.variablesUI.updateUI();\n        this.profilesUI.updateUI();\n    }\n}", "// Define interfaces for our settings data structures\n\nexport interface Trigger {\n    match: string;\n    type: string;     // 'regex', 'substring', or 'exact'\n    actions: string;  // Command text or JavaScript code\n    actionType: string; // 'text' or 'javascript'\n}\n\nexport interface Alias {\n    alias: string;\n    command: string;\n}\n\nexport interface Variable {\n    name: string;\n    type: string;\n    value: string;\n}\n\nexport interface KeyBinding {\n    key: string;\n    commands: string;\n}\n\nexport class AppSettings {\n    fontSize: number = 14;\n    backgroundColor: string = \"#000000\";\n    foregroundColor: string = \"#FFFFFF\";\n    Aliases: Alias[] = [\n        {alias: \"'\", command: \"say\"},\n        {alias: \".\", command: \"yell\"}\n    ];\n    Keybindings: KeyBinding[] = [\n        {key: 'Numpad8', commands: 'north'},\n        {key: 'Numpad6', commands: 'east'},\n        {key: 'Numpad2', commands: 'south'},\n        {key: 'Numpad4', commands: 'west'},\n        {key: 'Numpad9', commands: 'up'},\n        {key: 'Numpad3', commands: 'down'},\n        {key: 'Numpad5', commands: 'look'},\n        {key: 'Escape', commands: '/selectinput'}\n    ];\n    Variables: Variable[] = [];\n    Triggers: Trigger[] = [];\n}"],
  "mappings": "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CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,MAAQ,KAAA,EAC7C,CAAC,MAAQ,KAAA,EAAS,CAAC,MAAQ,KAAA,EAAS,CAAC,MAAQ,KAAA,EAC7C,CAAC,MAAQ,KAAA,EAAS,CAAC,MAAQ,KAAA,EAAS,CAAC,MAAQ,KAAA,EAC7C,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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "globalThis", "e", "t", "s", "r", "n", "o", "h", "c", "l", "AccessibilityManager", "Disposable", "_terminal", "instantiationService", "super", "_coreBrowserService", "_renderService", "_rowColumns", "WeakMap", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "mainDocument", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "addDisposableDomListener", "document", "_handleSelectionChange", "onDprChange", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "line", "get", "ydisp", "columns", "lineData", "translateToString", "undefined", "posInSet", "innerText", "set", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "selection", "getSelection", "isCollapsed", "contains", "anchorNode", "clearSelection", "focusNode", "console", "error", "begin", "node", "offset", "anchorOffset", "focusOffset", "compareDocumentPosition", "Node", "DOCUMENT_POSITION_PRECEDING", "DOCUMENT_POSITION_CONTAINED_BY", "DOCUMENT_POSITION_FOLLOWING", "childNodes", "lastRowElement", "slice", "toRowColumn", "rowElement", "Text", "parentNode", "row", "parseInt", "isNaN", "warn", "column", "cols", "beginRowColumn", "endRowColumn", "select", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IInstantiationService", "ICoreBrowserService", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "_color", "TwoKeyMap", "_css", "bg", "fg", "clear", "type", "handler", "options", "disposed", "dispose", "Linkifier", "currentLink", "_currentLink", "_element", "_mouseService", "_bufferService", "_linkProviderService", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_activeProviderReplies", "_clearCurrentLink", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "forEach", "reply", "linkWithState", "Map", "linkProvided", "linkProvider", "linkProviders", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "has", "splice", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "fire", "leave", "lower", "upper", "current", "mouseService", "coords", "getCoords", "x1", "y1", "x2", "y2", "IMouseService", "IBufferService", "ILinkProviderService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "window", "open", "opener", "location", "href", "IOptionsService", "IOscLinkService", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "d", "_", "u", "f", "g", "m", "C", "b", "w", "E", "k", "L", "D", "R", "A", "B", "M", "O", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "_decorationService", "_instantiationService", "createInstance", "DecorationService", "setService", "IDecorationService", "LinkProviderService", "registerLinkProvider", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "colorRgb", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "channels", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "ownerDocument", "defaultView", "_document", "documentOverride", "Document", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "updateCursorStyle", "_helperContainer", "isChromeOS", "CoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "MouseService", "linkifier", "hasRenderer", "setRenderer", "_createRenderer", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "self", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "_customWheelEventHandler", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "customWheelEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "setSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "selectAll", "selectLines", "shouldIgnoreComposition", "isMac", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "P", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "setTimeout", "_scrollArea", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "translateBufferLineToString", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "S", "_terminalClass", "_selectionRenderModel", "createSelectionRenderModel", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "blinkAnimationUnderlineId", "blinkAnimationBarId", "blinkAnimationBlockId", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "update", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isInvisible", "isCursorHidden", "isFocused", "isDim", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "rgba", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "$", "className", "minimumContrastRatio", "treatGlyphAsBackgroundColor", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isEmoji", "glyphSizeX", "deviceCellWidth", "currentOffset", "SelectionRenderModel", "constructor", "terminal", "viewportY", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "TextMetricsMeasureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "BaseMeasureStategy", "_result", "_parentElement", "_measureElement", "_validateAndSet", "Number", "OffscreenCanvas", "measureText", "metrics", "fontBoundingBoxAscent", "fontBoundingBoxDescent", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_window", "_isFocused", "_cachedIsFocused", "_screenDprMonitor", "ScreenDprMonitor", "_onDprChange", "_onWindowChange", "onWindowChange", "setWindow", "devicePixelRatio", "hasFocus", "queueMicrotask", "_parentWindow", "_windowResizeListener", "_outerListener", "_setDprAndFireIfDiffers", "_currentDevicePixelRatio", "_updateDpr", "_setWindowResizeListener", "clearListener", "parentWindow", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "providerIndex", "indexOf", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_observerDisposable", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "_registerIntersectionObserver", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "wasUserInput", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "listener", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "p", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "viewportEnd", "viewportStart", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodepoint", "precedingJoinState", "ch", "currentInfo", "charProperties", "extractWidth", "shouldJoin", "extractShouldJoin", "oldWidth", "stringFromCodePoint", "addLineToLink", "oldRow", "oldCol", "_eraseAttrData", "BufferLine", "copyCellsFrom", "addCodepointToCell", "delta", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "joinState", "idata", "itext", "codePointAt", "tlength", "copyWithin", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "array", "_data", "third", "fourth", "isNode", "process", "userAgent", "navigator", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "getUnderlineVariantOffset", "underlineVariantOffset", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "attrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "outColumns", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "preceding", "wcwidth", "createPropertyValue", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "loadedAddon", "_wrappedAddonDispose", "_buffer", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "rescaleOverlappingGlyphs", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "precedingInfo", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "_verifyIntegers", "attachCustomKeyEventHandler", "attachCustomWheelEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "root", "factory", "exports", "module", "define", "amd", "self", "e", "t", "terminal", "this", "_terminal", "dispose", "fit", "dims", "proposeDimensions", "isNaN", "cols", "rows", "core", "_core", "_renderService", "clear", "resize", "element", "parentElement", "dimensions", "css", "cell", "width", "height", "scrollbarWidth", "options", "scrollback", "viewport", "scrollBarWidth", "parentElementStyle", "window", "getComputedStyle", "parentElementHeight", "parseInt", "getPropertyValue", "parentElementWidth", "Math", "max", "elementStyle", "availableHeight", "availableWidth", "floor", "NegotiateResponse", "TelnetNegotiator", "input", "response", "i", "lastIndex", "command", "option", "subNegResponse", "clientType", "clientTypeBytes", "arrays", "totalLength", "acc", "value", "result", "offset", "array", "WebSocketManager", "outputHandler", "inputHandler", "onConnectHandler", "port", "TelnetNegotiator", "event", "uint8Array", "data", "response", "protocol", "host", "e", "message", "error", "messageToSend", "import_xterm", "import_addon_fit", "AliasesUI", "app", "alias", "index", "row", "aliasCell", "commandCell", "actionCell", "editBtn", "deleteBtn", "formTitle", "aliasRow", "aliasLabel", "aliasInput", "cmdRow", "cmdLabel", "cmdInput", "hintText", "buttonRow", "saveBtn", "cancelBtn", "TriggersUI", "app", "trigger", "index", "row", "patternCell", "typeCell", "actionTypeCell", "actionCell", "controlsCell", "editBtn", "deleteBtn", "formTitle", "patternRow", "patternLabel", "patternInput", "typeRow", "typeLabel", "typeSelect", "option", "optEl", "actionTypeRow", "actionTypeLabel", "actionTypeSelect", "actionsRow", "actionsLabel", "actionsInput", "hintText", "testContainer", "testTitle", "testInputRow", "testInputLabel", "testInput", "testButton", "pattern", "type", "testText", "isMatch", "resultElement", "error", "buttonRow", "saveBtn", "cancelBtn", "KeyBindingsUI", "app", "binding", "index", "row", "keyCell", "commandCell", "actionCell", "editBtn", "deleteBtn", "formTitle", "keyRow", "keyLabel", "keyInput", "captureBtn", "cmdRow", "cmdLabel", "cmdInput", "hintText", "buttonRow", "saveBtn", "cancelBtn", "targetInput", "dialogOverlay", "dialogContainer", "dialogContent", "heading", "instructions", "keyDisplay", "keyHandler", "e", "keyString", "VariablesUI", "app", "variable", "index", "row", "nameCell", "typeCell", "valueCell", "actionCell", "editBtn", "deleteBtn", "formTitle", "nameRow", "nameLabel", "nameInput", "typeRow", "typeLabel", "typeSelect", "option", "optEl", "valueRow", "valueLabel", "valueInput", "hintText", "buttonRow", "saveBtn", "name", "v", "value", "type", "num", "cancelBtn", "selectedType", "currentVal", "event", "ProfilesUI", "app", "selectedProfile", "profileName", "e", "inputField", "profiles", "currentProfile", "option", "AppSettingsUI", "app", "AliasesUI", "TriggersUI", "KeyBindingsUI", "VariablesUI", "ProfilesUI", "toolbar", "entries", "modal", "fileInput", "e", "item", "tabName", "connectBtn", "disconnectBtn", "exportSettingsBtn", "importSettingsBtn", "settingsFileInput", "importConfirmModal", "importConfirmClose", "confirmImportBtn", "cancelImportBtn", "event", "style", "content", "settingsJson", "blob", "url", "date", "filename", "file", "reader", "error", "inputField", "AppSettings", "App", "terminalId", "port", "WebSocketManager", "message", "AppSettingsUI", "savedProfiles", "e", "defaultSettings", "AppSettings", "lastUsedProfile", "currentProfile", "p", "profileIndex", "newSettings", "terminalContent", "buffer", "totalLines", "i", "line", "formattedLine", "currentFg", "currentBg", "currentAttrs", "j", "cell", "char", "fg", "bg", "isBold", "isItalic", "isUnderline", "isDim", "isBlink", "isInverse", "isInvisible", "currentCellAttrs", "codes", "content", "string", "isSuccess", "feedback", "command", "direction", "lines", "processedLines", "processedLine", "aliasFound", "aliasObj", "aliasRegex", "match", "additionalText", "variableMap", "variable", "processedCommand", "variableRegex", "variableName", "value", "text", "cleaned", "cleanText", "trigger", "isMatch", "error", "type", "pattern", "regexError", "actionsText", "actionType", "selection", "key", "domEvent", "code", "keyType", "event", "keyCombo", "keybind", "selStart", "selEnd", "err", "textArea", "settings", "settingsJson", "importedSettings", "profileName", "wasActiveProfile", "defaultProfile", "profile", "name", "varName", "varValue", "existingVarIndex", "v", "callback", "delay", "interval", "id", "actions", "isOpen", "isInteracting"]
}
